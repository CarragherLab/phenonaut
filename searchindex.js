Search.setIndex({"docnames": ["cmap_example", "index", "phenonaut", "phenonaut.data", "phenonaut.integration", "phenonaut.integration.integrators", "phenonaut.metrics", "phenonaut.metrics.compactness", "phenonaut.metrics.distinctness", "phenonaut.output", "phenonaut.packaged_datasets", "phenonaut.predict", "phenonaut.predict.default_predictors", "phenonaut.predict.default_predictors.pytorch_models", "phenonaut.transforms", "publication_examples", "tcga_example", "userguide", "workflow_guide"], "filenames": ["cmap_example.rst", "index.rst", "phenonaut.rst", "phenonaut.data.rst", "phenonaut.integration.rst", "phenonaut.integration.integrators.rst", "phenonaut.metrics.rst", "phenonaut.metrics.compactness.rst", "phenonaut.metrics.distinctness.rst", "phenonaut.output.rst", "phenonaut.packaged_datasets.rst", "phenonaut.predict.rst", "phenonaut.predict.default_predictors.rst", "phenonaut.predict.default_predictors.pytorch_models.rst", "phenonaut.transforms.rst", "publication_examples.rst", "tcga_example.rst", "userguide.rst", "workflow_guide.rst"], "titles": ["Example 2 - CMAP", "Welcome to the Phenonaut documentation!", "phenonaut package", "phenonaut.data package", "phenonaut.integration package", "phenonaut.integration.integrators package", "phenonaut.metrics package", "phenonaut.metrics.compactness package", "phenonaut.metrics.distinctness package", "phenonaut.output package", "phenonaut.packaged_datasets package", "phenonaut.predict package", "phenonaut.predict.default_predictors package", "phenonaut.predict.default_predictors.pytorch_models package", "phenonaut.transforms package", "Publication examples", "Example 1 - TCGA", "User guide", "Workflow mode"], "terms": {"The": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "purpos": [0, 3, 16, 17, 18], "lower": [0, 2, 3, 6, 7, 11, 18], "right": [0, 4, 9], "portion": 0, "figur": [0, 9, 16], "1": [0, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18], "applic": [0, 3, 16], "note": [0, 2, 3, 4, 6, 7, 14, 16, 17, 18], "manuscript": [0, 16], "wa": [0, 2, 3, 6, 7, 9, 10, 11, 14, 16, 18], "exemplifi": [0, 2, 16, 18], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "packag": [0, 1, 16], "dataset": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16], "along": [0, 2, 3, 6, 8, 10, 14, 16, 17, 18], "user": [0, 2, 3, 10, 11, 16, 18], "suppli": [0, 2, 3, 6, 7, 9, 10, 11, 14, 16, 17, 18], "built": [0, 1, 14, 17], "phenotyp": [0, 1, 2, 6, 7, 8, 18], "metric": [0, 1, 2, 3, 10, 11, 16, 17], "an": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "interact": [0, 14, 15], "jupyt": [0, 15], "notebook": [0, 15], "core": [0, 10], "version": [0, 10, 16], "4": [0, 2, 3, 4, 6, 8, 10, 14, 16, 18], "9": [0, 2, 6, 14, 16, 17, 18], "carri": [0, 3, 14, 16, 17], "out": [0, 2, 3, 6, 7, 9, 11, 14, 16, 17], "thi": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "analysi": [0, 2, 3, 6, 10, 14, 16, 17, 18], "python": [0, 1, 2, 6, 15, 17, 18], "3": [0, 2, 3, 5, 6, 10, 11, 14, 16, 18], "5": [0, 2, 3, 6, 7, 10, 11, 14, 16, 17, 18], "phenonaut": [0, 15, 16, 18], "0": [0, 2, 3, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18], "numpi": [0, 6, 7, 11, 14, 16], "20": [0, 2, 10, 11, 16, 18], "panda": [0, 2, 3, 6, 7, 8, 10, 14, 16, 17, 18], "scikit": [0, 2, 6, 8, 10, 14, 16], "learn": [0, 10, 14, 16], "24": [0, 10, 16], "pytorch": [0, 10, 11, 16], "10": [0, 6, 7, 8, 9, 10, 13, 16, 17, 18], "instal": [0, 1], "can": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 17], "found": [0, 1, 2, 3, 6, 7, 9, 10, 11, 14, 16, 18], "sourc": [0, 2, 3, 11, 16], "repositori": [0, 10, 16], "name": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "example2_cmap_metric_group": 0, "ipynb": 0, "evalu": [0, 2, 3, 6, 7, 16], "euclidean": [0, 2, 3, 6, 7, 8, 18], "manhattan": [0, 2, 6, 7, 18], "distanc": [0, 1, 2, 3, 7, 8, 14, 18], "defin": [0, 1, 2, 3, 6, 7, 9, 10, 11, 14, 16, 18], "tcc": 0, "6": [0, 2, 3, 6, 9, 14, 17, 18], "scalar": [0, 1, 2, 6, 10], "project": [0, 1, 2, 6, 16, 17], "7": [0, 4, 5, 6, 17], "In": [0, 2, 3, 6, 7, 10, 11, 16, 17, 18], "loader": [0, 17], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17], "obtain": [0, 2, 3, 6, 7], "copi": [0, 2, 3, 14, 18], "public": [0, 1, 10, 16, 17, 18], "which": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "filter": [0, 1, 2, 3, 6, 7, 10, 14, 17], "keep": [0, 2, 3, 6, 7, 9, 14, 18], "onli": [0, 2, 3, 4, 6, 7, 9, 10, 11, 14, 16, 17, 18], "crispr": [0, 10], "perturb": [0, 2, 3, 6, 7, 8, 9, 10, 14, 18], "repeat": [0, 6, 7, 11, 18], "a549": 0, "cell": [0, 2, 3, 6, 7, 9, 10, 18], "line": [0, 2, 3, 6, 7, 16, 17, 18], "transfect": 0, "plx311": 0, "cas9": 0, "vector": [0, 3, 6], "from": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "here": [0, 1, 2, 3, 6, 7, 9, 10, 14, 17, 18], "refer": [0, 6, 8, 16, 17, 18], "intern": [0, 2, 3, 10, 16, 17, 18], "nomenclatur": 0, "311": 0, "ar": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "area": [0, 17], "under": [0, 2, 6, 9, 10, 17, 18], "receiv": 0, "oper": [0, 1, 2, 3, 6, 7, 8, 10, 11, 14, 17, 18], "characterst": 0, "curv": 0, "auroc": [0, 2, 6, 11, 16], "indic": [0, 2, 3, 6, 11, 14, 16, 17], "abil": [0, 2, 11, 17, 18], "group": [0, 2, 3, 4, 6, 7, 8, 14, 17, 18], "togeth": [0, 2, 3, 10, 17, 18], "boxplot": [0, 1, 2, 11, 16, 18], "perform": [0, 2, 3, 4, 6, 7, 8, 10, 11, 14, 16, 17, 18], "across": [0, 2, 3, 6, 7, 11, 16, 17, 18], "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17], "give": [0, 2, 6, 9, 10], "overview": 0, "file": [0, 2, 3, 6, 7, 9, 10, 11, 14, 16, 17], "avail": [0, 1, 2, 3, 6, 7, 10, 11, 14, 16, 17], "supplement": 0, "data": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18], "object": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17], "store": [0, 2, 3, 6, 7, 9, 10, 17], "section": 0, "code": [0, 2, 3, 17], "list": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18], "requir": [0, 2, 3, 4, 6, 7, 8, 10, 11, 14, 16, 17, 18], "explor": [0, 1, 2, 6, 11, 18], "shown": [0, 14, 16, 17], "within": [0, 1, 2, 3, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18], "A": [0, 1, 2, 3, 6, 7, 8, 10, 11, 14, 16, 17, 18], "walkthrough": [0, 2, 18], "follow": [0, 2, 3, 6, 7, 10, 11, 14, 16, 17, 18], "xpr": 0, "present": [0, 2, 3, 4, 6, 7, 9, 10, 11, 14, 16, 17, 18], "offer": [0, 10, 17], "possibl": [0, 2, 6, 7, 10, 11, 16, 17, 18], "appli": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 14, 15, 16], "differ": [0, 1, 2, 3, 6, 7, 8, 9, 10, 14, 17, 18], "represent": [0, 11], "level": [0, 2, 3, 6, 7, 10, 18], "l1000": [0, 6, 10], "profil": [0, 1, 2, 3, 6, 7, 10, 16, 18], "we": [0, 2, 3, 6, 8, 10, 14, 17, 18], "featur": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 18], "space": [0, 1, 2, 3, 6, 8, 14, 16, 17, 18], "pair": [0, 2, 3, 16, 18], "correctli": [0, 10, 14], "rank": [0, 6], "highli": [0, 1, 2, 6, 14, 18], "similar": [0, 2, 6, 7, 8, 11, 16, 18], "each": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 18], "other": [0, 2, 3, 6, 7, 8, 14, 17, 18], "score": [0, 2, 3, 4, 6, 7, 8, 10, 11, 14, 16, 18], "through": [0, 2, 3, 4, 6, 7, 9, 10, 11, 14, 17, 18], "characterist": [0, 2, 18], "repres": [0, 2, 3, 6, 10, 17, 18], "random": [0, 4, 6, 7, 8, 11, 14, 16], "guess": [0, 9, 11], "perfect": 0, "perfectli": 0, "incorrect": [0, 3], "being": [0, 2, 3, 6, 7, 9, 10, 11, 17, 18], "now": [0, 1, 17], "extract": [0, 6, 8, 9, 10, 11], "cityblock": [0, 2, 18], "cosin": [0, 6], "full": [0, 2, 6, 7, 10, 16, 17, 18], "standard": [0, 2, 3, 6, 7, 8, 9, 10, 16, 18], "pca": [0, 1, 2, 6, 8, 10, 14], "t": [0, 2, 6, 8, 14, 18], "sne": [0, 2, 14, 18], "umap": [0, 1, 2, 14], "unsuit": 0, "angular": 0, "first": [0, 2, 3, 4, 6, 7, 10, 11, 17, 18], "dataload": [0, 10, 17], "load": [0, 1, 2, 3, 11, 16, 17], "entir": [0, 2, 3, 14, 18], "process": [0, 2, 3, 6, 7, 10, 14, 16, 18], "where": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 18], "treatment": [0, 2, 3, 4, 6, 7, 8, 10, 18], "peturb": [0, 2, 3, 18], "ctl_untrt": 0, "onc": [0, 2, 6, 7, 11, 14, 17, 18], "save": [0, 1, 2, 9, 10, 11, 14, 17], "pickl": [0, 2, 11, 17], "so": [0, 2, 6, 7, 8, 10, 14, 18], "more": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 18], "quickli": 0, "futur": 0, "As": [0, 1, 2, 3, 6, 7, 9, 10, 17, 18], "scaler": [0, 6, 8], "input": [0, 2, 3, 6, 7, 9, 17, 18], "next": 0, "function": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 16, 17, 18], "below": [0, 2, 3, 10, 14, 17, 18], "base_project_dir": 0, "took": 0, "locat": [0, 2, 3, 10, 16, 18], "conveni": [0, 2, 3, 10, 18], "output": [0, 1, 2, 3, 6, 7, 11, 14, 16, 18], "directori": [0, 2, 3, 6, 10, 11, 16, 17, 18], "local": [0, 2, 10], "filesystem": [0, 2, 10, 17], "import": [0, 1, 2, 6, 14, 16, 17], "np": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14], "pd": [0, 2, 3, 6, 7, 9, 10, 11, 14, 18], "transform": [0, 1, 2, 3, 4, 5, 10], "pathlib": [0, 2, 3], "path": [0, 2, 3, 6, 7, 9, 10, 11, 14, 16, 17, 18], "exist": [0, 1, 2, 3, 6, 7, 9, 10, 14, 17, 18], "mkdir": 0, "parent": [0, 2, 10, 14], "true": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 18], "phe_object_path": 0, "phe_ob_cmap_trt_xpr_a549": 0, "gz": [0, 10], "cmap_data": 0, "packaged_dataset": [0, 1, 2, 16, 17], "local_scratch": [0, 16], "phenonaut_dataset": [0, 16], "phe": [0, 2, 6, 11, 14, 16, 17], "d": [0, 1, 2, 6, 7, 8, 9, 10, 14, 17], "new_dataset_from_queri": [0, 1, 2], "cell_id": [0, 10], "pert_typ": [0, 10], "trt_xpr": [0, 10], "perturbation_column": [0, 2, 3, 4, 6, 7, 8, 17], "pert_inam": [0, 6, 7, 10], "clone_dataset": [0, 1, 2], "xpr_scale": 0, "overwrite_exist": [0, 2], "standardscal": [0, 2, 14], "scipi": [0, 3, 6], "spatial": [0, 3], "cosine_dist": 0, "dataclass": [0, 6, 11], "type": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "union": [0, 2, 3, 6, 7, 8, 9, 10, 11, 14, 16], "callabl": [0, 1, 2, 3, 6, 7, 8, 10, 11, 14], "class": [0, 1, 2, 3, 5, 6, 9, 10, 11, 13, 14, 18], "phenotypicmetr": [0, 2, 6, 7, 8], "str": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18], "func": [0, 2, 3, 11], "lower_is_bett": [0, 2, 3, 9, 11], "bool": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16], "is_angular": 0, "fals": [0, 2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "lambda": [0, 2, 3, 10], "x": [0, 2, 3, 6, 9, 10, 11, 13], "y": [0, 6, 9, 11, 13], "uniform": [0, 14], "_scalar_projection_sc": 0, "metrics_dictionari": 0, "m": [0, 1, 5, 6], "sklearn": [0, 6, 11, 14], "roc_auc_scor": 0, "def": [0, 16], "auroc_scores_for_perturbation_repeat": 0, "average_repeat": 0, "tupl": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 17, 18], "pert_scor": 0, "df_dict": 0, "dist_mat": 0, "distance_df": [0, 2, 3], "valu": [0, 2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "pert_nam": 0, "df": [0, 1, 2, 3, 6, 9, 10, 11, 14, 17], "uniqu": [0, 2, 3, 6, 7, 8, 10, 11, 14, 16, 18], "pert_index": 0, "index": [0, 1, 2, 3, 6, 10, 11, 18], "get_loc": 0, "idx": [0, 3], "queri": [0, 2, 3, 6, 7, 8, 10, 14, 18], "f": [0, 2, 3, 9, 17], "repeat_scor": 0, "predict": [0, 1, 2, 10, 16, 17], "zero": 0, "shape": [0, 3, 14], "dtype": [0, 2, 3, 10], "int": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16], "prediction_scor": 0, "rocscor": 0, "append": [0, 1, 2, 6, 7], "els": [0, 2, 16], "mean": [0, 2, 3, 10, 14, 17, 18], "extend": 0, "len": [0, 2], "return": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 17], "datafram": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18], "ndim": [0, 2, 6, 14, 18], "stage": [0, 17], "unoptim": 0, "baselin": 0, "order": [0, 2, 6, 14, 18], "saniti": 0, "check": [0, 2, 3, 10, 14, 16], "were": [0, 2, 3, 6, 7], "visualis": [0, 1, 9, 17], "tsne": [0, 1, 2, 14, 18], "produc": [0, 2, 3, 6, 11, 14, 16, 17, 18], "scatter": [0, 1, 2, 17], "larg": [0, 2, 3, 6, 14, 18], "blue": 0, "untreat": 0, "control": [0, 2, 3, 4, 6, 8, 11, 14, 18], "With": [0, 2, 11, 16, 17, 18], "structur": [0, 2, 10, 11, 17], "select": [0, 2, 6, 7, 9, 10, 11, 14, 16, 17, 18], "roughli": 0, "deem": [0, 6, 7, 17], "appropri": [0, 2, 3, 6, 8, 18], "metric_scor": 0, "csv": [0, 2, 3, 6, 7, 9, 11, 16, 17, 18], "rais": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14], "fileexistserror": 0, "perturbation_scores_df": 0, "features_nam": 0, "ds_name": [0, 10], "zip": 0, "std": 0, "xpr_scaled_pca": 0, "xpr_scaled_umap": 0, "xpr_scaled_tsn": 0, "print": [0, 6, 8, 17], "work": [0, 2, 6, 7, 11, 14, 17, 18], "continu": 0, "feature_metric_df": 0, "metric_nam": [0, 6], "concat": 0, "reset_index": [0, 3], "drop": [0, 2, 3, 4, 14, 18], "to_csv": [0, 2, 3, 18], "summaris": [0, 6], "result": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 16, 18], "abov": [0, 2, 3, 4, 6, 7, 10, 14, 17, 18], "whilst": [0, 3, 6, 7, 16, 17, 18], "measur": [0, 1, 2, 3, 8, 10, 16], "should": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 17, 18], "avoid": 0, "due": [0, 2, 17, 18], "depend": [0, 2, 11, 18], "hyperparamet": [0, 2, 11, 16, 18], "demonstr": [0, 16], "matplotlib": [0, 9], "pyplot": 0, "plt": [0, 9], "seaborn": [0, 9], "sn": 0, "metric_scores_df": 0, "read_csv": [0, 2, 18], "fig": 0, "ax": 0, "subplot": 0, "facecolor": 0, "w": [0, 6], "size": [0, 2, 3, 9, 11, 18], "a4": [0, 17], "paper": [0, 2, 6, 8, 11, 15, 18], "set_size_inch": 0, "12": [0, 9, 10], "8": [0, 2, 3, 6, 9, 11, 14, 17, 18], "hue": 0, "showmean": 0, "meanprop": 0, "marker": [0, 9], "o": [0, 1, 2, 3], "markerfacecolor": 0, "white": 0, "markeredgecolor": 0, "black": 0, "markers": 0, "axhlin": 0, "color": 0, "linestyl": 0, "set": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "ylim": 0, "xlabel": 0, "ylabel": 0, "titl": [0, 2, 3, 6, 7, 9, 11, 14, 17, 18], "averag": [0, 2, 3, 16], "reproduc": [0, 6, 7, 8, 11], "tight_layout": 0, "savefig": [0, 9], "png": [0, 2, 3, 9, 14, 16, 18], "dpi": 0, "300": [0, 9], "For": [0, 2, 3, 4, 6, 7, 11, 14, 16, 17, 18], "dimension": [0, 1, 2, 6, 10, 14, 16, 17], "reduct": [0, 1, 2, 10, 14, 16, 17], "techniqu": [0, 2, 10, 17, 18], "dimens": [0, 2, 6, 10, 14, 17, 18], "request": [0, 2, 3, 4, 10, 17], "all": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "option": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "kept": [0, 2, 3, 18], "default": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "u": 0, "insight": 0, "statist": [0, 6, 7, 8, 10, 16, 17, 18], "test": [0, 2, 3, 5, 6, 7, 8, 11, 16, 18], "distribut": [0, 6, 7, 11], "against": [0, 2, 6, 8, 11, 14, 16, 18], "allow": [0, 1, 2, 3, 6, 7, 9, 10, 11, 14, 16, 18], "recommend": [0, 2, 17], "mann": 0, "whitnei": 0, "tail": 0, "mode": [0, 1, 2, 6], "altern": [0, 2, 3, 6, 7, 14, 17, 18], "hypothesi": 0, "stochast": 0, "greater": [0, 3, 6, 7, 10], "than": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17], "matrix": [0, 6, 14], "s7": 0, "s8": 0, "calcul": [0, 2, 3, 6, 7, 8, 9, 14, 16, 18], "two": [0, 2, 3, 4, 6, 11, 15, 16, 17], "heatmap": [0, 1, 2, 11, 16, 18], "deepcopi": 0, "featurespaceandmetr": 0, "featurespac": 0, "stat": 0, "mannwhitneyu": 0, "featurespeace_metric_combin": 0, "feature_spac": 0, "pval": [0, 6], "nan": [0, 3, 6, 8, 10], "i1": 0, "fsm1": 0, "enumer": [0, 2, 4, 9, 11, 14, 18], "i2": 0, "fsm2": 0, "vals1": 0, "vals2": 0, "pvalu": 0, "mwu_df": 0, "column": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "fsm": 0, "write_heatmap_from_df": [0, 2, 9], "p": [0, 2, 6, 7, 8], "same": [0, 2, 3, 4, 10, 14, 16, 18], "less": [0, 2, 3, 6, 7], "candid": [0, 3, 6], "mwu": 0, "figsiz": [0, 2, 9, 18], "16": [0, 4], "highlight_best": [0, 9], "put_cbar_on_left": [0, 9], "axis_label": [0, 9], "better_than_count": 0, "sum": 0, "05": [0, 3], "axi": [0, 3, 9], "insert": [0, 2, 3, 9, 18], "reshap": [0, 17], "better_than_df": 0, "custom_annot": 0, "loc": 0, "na": [0, 10], "num": [0, 4, 6, 7], "signific": [0, 6, 7], "betterthan": 0, "annotation_format_string_valu": [0, 9], "g": [0, 2, 18], "annot": [0, 2, 9], "transpos": [0, 2, 3, 9, 17, 18], "sns_colour_palett": [0, 9], "combin": [0, 2, 4, 10, 11, 16, 17, 18], "better": [0, 3, 6, 7], "denot": [0, 2, 3, 6, 7, 9, 10, 11, 14, 18], "given": [0, 2, 3, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18], "row": [0, 1, 2, 3, 4, 6, 7, 8, 10, 14, 16, 18], "chanc": 0, "If": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "outperform": 0, "count": [0, 6], "number": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "significantli": 0, "suggest": 0, "show": [0, 2, 9, 14, 16, 17], "between": [0, 2, 3, 6, 7, 8, 10, 11, 14, 17, 18], "ani": [0, 2, 3, 6, 7, 9, 10, 11, 14, 17, 18], "those": [0, 3, 6, 9, 14, 16], "top": [0, 3], "evidenc": 0, "addition": [0, 2, 6, 8, 10], "optimis": [0, 2, 11, 16, 18], "simpl": [0, 2, 3, 6, 8, 10, 14, 18], "scan": [0, 11], "approach": [0, 2, 3, 4, 6, 10, 16, 17, 18], "reach": [0, 14], "optimum": 0, "dimensionality_reduct": [0, 1, 2], "enum": [0, 11], "auto": [0, 6, 7, 14], "ndims_scan_csv_fil": 0, "res_ndims_scan": 0, "eval_all_metr": 0, "sd": 0, "num_dimens": 0, "center_on_perturb": [0, 2, 14, 18], "untrt": 0, "pca_d": 0, "center_on_perturbation_id": [0, 2, 14, 18], "tsne_d": 0, "umap_d": 0, "empti": [0, 2, 3, 9, 10, 17, 18], "j": 0, "angular_is_ok": 0, "auroc_scor": 0, "_": [0, 3, 14, 17], "multiprocess": [0, 6, 7], "pool": 0, "n_dims_list": 0, "arang": 0, "min": [0, 9, 10], "re": 0, "arrai": [0, 2, 3, 6, 11, 14], "starmap": 0, "nd": 0, "close": 0, "attent": 0, "df_metric_list": 0, "df_features_list": 0, "df_ndims_list": 0, "df_score_list": 0, "rang": [0, 3, 6, 7, 9, 16], "k": 0, "ha": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 17, 18], "been": [0, 2, 3, 6, 7, 8, 10, 14, 18], "ndims_df": 0, "sharei": 0, "scatterplot": 0, "style": [0, 3, 6, 7, 8, 9, 14], "legend": [0, 9], "set_text": 0, "v": [0, 6, 9, 14, 17], "lines_label": 0, "get_legend_handles_label": 0, "label": [0, 2, 3, 9, 10, 17, 18], "lol": 0, "move_legend": 0, "ndims_optimisation_scatt": 0, "tabl": [0, 2, 6, 17, 18], "optim": [0, 16], "maximis": 0, "36": 0, "227": 0, "288": 0, "78": 0, "356": 0, "determin": [0, 6, 7, 9, 11, 16, 18], "mai": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "again": 0, "metrics_dict": 0, "perturbation_scores_ndim_opt": 0, "ds_pca_36": 0, "ds_pca_24": 0, "ds_pca_78": 0, "ds_pca_356": 0, "ds_tsne_2": 0, "ds_umap_227": 0, "ds_umap_288": 0, "optimised_perturbation_scores_ndim_opt": 0, "clip": 0, "upper": [0, 6, 7, 11], "12000": 0, "boxplot_opt": 0, "throret": 0, "maximum": [0, 2, 6, 9, 14], "achiev": [0, 2, 3, 6, 7, 9, 14, 17, 18], "similarli": [0, 2], "befor": [0, 2, 3, 6, 7, 9, 14, 17, 18], "optimised_perturbation_scores_df": 0, "optimised_perturbation_scor": 0, "mwu_heatmap_opt": 0, "betterthan_heatmap_opt": 0, "reflect": [0, 14], "theoret": 0, "howev": [0, 2, 3, 14, 17], "previou": [0, 2], "gain": [0, 6, 7], "over": [0, 6, 7, 9, 10, 16], "framework": [1, 17], "workflow": [1, 16], "multi": [1, 2, 10, 16, 17, 18], "omic": [1, 10, 11, 16, 17, 18], "origin": [1, 2, 3, 6, 7, 8, 10, 14], "target": [1, 2, 3, 6, 9, 10, 11, 16, 17, 18], "high": [1, 4, 6, 7, 8, 10], "imag": [1, 2, 3, 6, 9, 11], "agnost": [1, 3, 17], "manner": [1, 10], "describ": [1, 2, 3, 6, 7, 10, 11, 14, 16, 17, 18], "potenti": [1, 2, 6, 7, 18], "view": [1, 2, 3, 5, 10, 11, 16, 17, 18], "seri": [1, 10, 11, 14], "specialis": 1, "centric": 1, "2": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 18], "custom": [1, 2, 3, 10], "script": 1, "either": [1, 2, 4, 6, 17, 18], "yaml": [1, 2, 3, 18], "json": [1, 2, 3, 6, 7, 11, 16, 18], "integr": [1, 2, 10, 16, 17, 18], "complex": [1, 14], "chain": [1, 2, 3], "instruct": [1, 3], "pipelin": [1, 2, 18], "when": [1, 2, 3, 4, 6, 7, 9, 10, 11, 14, 16, 17, 18], "execut": [1, 2, 6, 7, 16], "yml": [1, 2, 3], "alongsid": [1, 9], "api": [1, 2, 11, 16, 17, 18], "crash": 1, "cours": 1, "userguid": 1, "breakdown": [1, 6], "command": [1, 2, 16], "subpackag": 1, "submodul": [1, 16], "modul": [1, 16], "platemap_queri": [1, 2], "recip": [1, 2], "integration_control": [1, 2], "non_ds_phenotypic_metr": [1, 2], "util": 1, "pair_plot": [1, 2], "pptx": [1, 2, 11, 16, 18], "spreadsheet": [1, 2], "visualisation_bas": [1, 2], "base": [1, 2, 3, 4, 6, 9, 11, 13, 14], "breast_canc": [1, 2, 17], "cmap": [1, 2, 6, 17, 18], "iri": [1, 2, 6, 17, 18], "linc": [1, 2], "metadata_moa": [1, 2, 3], "tcga": [1, 2, 11, 17, 18], "optuna_funct": [1, 2], "predict_util": [1, 2], "predictor_dataclass": [1, 2], "generic_transform": [1, 2], "imput": [1, 2, 3], "prepar": [1, 2, 10, 16, 17, 18], "supervised_transform": [1, 2], "error": [1, 3, 6, 7, 8, 10, 17, 18], "notenoughrowserror": [1, 2], "add_well_id": [1, 2, 3], "aggregate_dataset": [1, 2], "combine_dataset": [1, 2], "filter_datasets_on_identifi": [1, 2], "get_dataset_combin": [1, 2], "get_dataset_index_from_nam": [1, 2], "get_dataset_nam": [1, 2], "get_df_features_perturbation_column": [1, 2, 3], "get_hash_dictionari": [1, 2], "groupby_dataset": [1, 2], "kei": [1, 2, 3, 6, 9, 10, 14, 17, 18], "load_dataset": [1, 2, 6, 17], "merge_dataset": [1, 2], "revert": [1, 2], "shrink": [1, 2, 3], "subtract_median_perturb": [1, 2, 3], "match_perturbation_column": [1, 2], "check_path": [1, 2], "load_dict": [1, 2], "vif_filter_featur": [1, 2], "cityblock_dist": [1, 2], "copy_column": [1, 2], "euclidean_dist": [1, 2], "filter_column": [1, 2, 3], "filter_correlated_and_vif_featur": [1, 2], "filter_correlated_featur": [1, 2], "filter_row": [1, 2, 3], "if_blank_also_blank": [1, 2], "mahalanobis_dist": [1, 2], "manhattan_dist": [1, 2], "rename_column": [1, 2, 3], "run_workflow": [1, 2], "scalar_project": [1, 2, 6, 18], "set_perturbation_column": [1, 2], "write_csv": [1, 2], "write_multiple_csv": [1, 2], "platemapqueri": [1, 2, 3], "get_compound_loc": [1, 2, 3], "plate_to_cpd_to_well_dict": [1, 2, 3], "platemap_fil": [1, 2, 3], "dataset_intersect": [1, 2], "contain": [1, 2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 18], "one": [1, 2, 3, 4, 6, 8, 9, 10, 11, 14, 15, 16, 18], "per": [1, 2, 3, 9, 11, 14, 18], "remov": [1, 2, 3, 4, 6, 7, 10, 11, 14, 16, 18], "correl": [1, 2, 6, 7, 10, 14, 18], "plot": [1, 2, 6, 9, 14], "exampl": [1, 2, 3, 6, 7, 10, 11, 14, 17, 18], "tnse": 1, "search": [1, 2, 3, 6], "page": [1, 9, 18], "df_to_csv": [2, 3], "df_to_multiple_csv": [2, 3], "divide_mean": [2, 3], "divide_median": [2, 3], "drop_absent_featur": [2, 3], "drop_column": [2, 3, 14, 18], "drop_nans_with_cutoff": [2, 3], "drop_row": [2, 3], "filter_columns_with_prefix": [2, 3], "filter_inplac": [2, 3], "filter_on_identifi": [2, 3], "get_ds_from_queri": [2, 3], "get_feature_rang": [2, 3], "get_histori": [2, 3, 17], "get_non_feature_column": [2, 3], "get_unique_perturb": [2, 3], "get_unique_treat": [2, 3], "groupbi": [2, 3, 6, 8, 14], "histori": [2, 3, 10, 14, 17], "impute_nan": [2, 3], "new_aggregated_dataset": [2, 3], "num_featur": [2, 3], "pcol": [2, 3], "pivot": [2, 3, 17], "remove_blocklist_featur": [2, 3], "remove_features_with_outli": [2, 3], "remove_low_variance_featur": [2, 3], "replace_str": [2, 3, 17], "split_column": [2, 3, 17], "subtract_func_results_on_featur": [2, 3], "subtract_mean": [2, 3], "subtract_median": [2, 3], "transformationhistori": [2, 3, 17], "descript": [2, 3, 4, 6, 7, 10, 17, 18], "classic": [2, 4], "concatenate_datasets_horizont": [2, 4], "compact": [2, 6], "pr": [2, 6], "distinct": [2, 6], "distinctness_measur": [2, 6], "mahalanobi": [2, 6, 8, 18], "treatment_spread_euclidean": [2, 6], "feature_correlation_to_target": [2, 6], "__call__": [2, 4, 5, 6, 10, 11, 14], "scale": [2, 6, 9], "calc_connectivity_scor": [2, 6], "calc_spearmansrank_scor": [2, 6], "calc_zhang_scor": [2, 6], "calc_zhang_scores_all_v_al": [2, 6], "percent_compact_summarise_result": [2, 6], "percent_replicating_results_dataframe_to_95pct_confidence_interv": [2, 6], "percent_replicating_results_dataframe_to_percentile_vs_percent_repl": [2, 6], "percent_replicating_summarise_result": [2, 6], "get_cdu_performance_df": [2, 6], "mp_value_scor": [2, 6, 8], "percent_compact": [2, 6, 7], "percent_repl": [2, 6, 7], "pertmutation_test_distinct_from_query_group": [2, 6, 8], "pertmutation_test_type2_distinct_from_query_group": [2, 6], "run_cdu_benchmark": [2, 6], "silhouette_scor": [2, 6, 8], "write_cdu_json": [2, 6], "write_boxplot_to_fil": [2, 9], "show_pair_plot": [2, 9], "phenonautpptx": [2, 9], "add_image_slid": [2, 9], "add": [2, 3, 6, 7, 9, 10, 17, 18], "save_figur": [2, 9], "write_xlsx": [2, 9], "phenonautvisualis": [2, 9], "packageddataset": [2, 6, 7, 10, 17], "df_kei": [2, 10], "ds_kei": [2, 10], "get_df": [2, 10], "get_d": [2, 10], "raw_data_dir": [2, 10], "register_df_kei": [2, 10], "register_ds_kei": [2, 10], "root": [2, 6, 10, 16], "breastcanc": [2, 10, 17, 18], "cmap_level4": [2, 6, 7, 10], "iris_2_view": [2, 10], "lincs_cell_paint": [2, 10], "metadatabroadlincscellpaintingmoa": [2, 10], "metadatajumpmoacompound": [2, 10], "tcga_metadatatupl": [2, 10], "add_clinical_decision_data_to_df": [2, 10], "default_predictor": [2, 11], "classifi": [2, 11, 16, 18], "multiregressor": [2, 11, 16, 18], "regressor": [2, 11, 14, 16, 18], "predictor_from_str": [2, 11], "predictor_to_str": [2, 11], "run_optuna_opt": [2, 11], "run_optuna_opt_merge_fold": [2, 11], "predictiontyp": [2, 11], "classif": [2, 11, 16, 18], "regress": [2, 11, 16, 18], "get_x_i": [2, 11], "get_best_predictor_dataset_df": [2, 11], "get_common_index": [2, 11], "get_df_from_optuna_db": [2, 11], "get_metr": [2, 11], "get_prediction_type_from_i": [2, 11], "get_y_from_target": [2, 11], "hyperparametercategor": [2, 11], "choic": [2, 10, 11], "need": [2, 3, 10, 11, 16, 17, 18], "hyperparameterfloat": [2, 11], "hyperparameterint": [2, 11], "hyperparameterlog": [2, 11], "optunahyperparamet": [2, 11], "optunahyperparameternumb": [2, 11], "lower_bound": [2, 11], "upper_bound": [2, 11], "phenonautpredictionmetr": [2, 11], "phenonautpredictor": [2, 11], "conditional_hyperparameter_gener": [2, 11], "conditional_hyperparameter_generator_constructor_keyword": [2, 11], "constructor_kwarg": [2, 11, 14], "dataset_size_cutoff": [2, 11], "embed_in_result": [2, 11], "max_class": [2, 11], "max_optuna_tri": [2, 11], "num_view": [2, 11], "optuna": [2, 11, 16, 18], "predictor": [2, 11, 16, 18], "lda": [2, 14], "make_scree_plot": [2, 14], "save_scree_plot": [2, 14], "log2": [2, 14], "knnimput": [2, 14], "rfimput": [2, 14], "simpleimput": [2, 14], "removehighestcorrelatedthenvif": [2, 14], "removehighlycorrel": [2, 14], "robustmad": [2, 3, 14], "vif": [2, 10, 14, 17, 18], "get_vif_scor": [2, 14], "zca": [2, 14], "supervisedtransform": [2, 14], "callable_arg": [2, 14], "fit": [2, 4, 5, 11, 12, 13, 14, 16, 18], "fit_transform": [2, 4, 5, 14], "has_fit": [2, 5, 14], "has_fit_transform": [2, 5, 14], "has_transform": [2, 5, 14], "is_cal": [2, 14], "method": [2, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18], "method_kwarg": [2, 14], "new_feature_nam": [2, 14], "phetransformerfitquerymatchednorow": [2, 14], "except": [2, 14], "bunch": 2, "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18], "kind": [2, 3], "packaged_dataset_name_filt": 2, "metadata": [2, 3, 6, 7, 10, 11, 16, 17, 18], "dict": [2, 3, 6, 7, 9, 11, 14], "dataframe_nam": 2, "init_hash": [2, 3, 17], "byte": [2, 3], "constructor": [2, 3, 9, 10, 14, 17], "hold": [2, 3, 11, 17], "multipl": [2, 3, 4, 6, 9, 10, 11, 14, 17, 18], "track": 2, "initialis": [2, 3, 6, 8, 9, 10], "packagedataset": 2, "pass": [2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "argument": [2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "paramet": [2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "collect": [2, 6, 7, 10, 11, 14], "cancer": [2, 10, 15, 16, 17, 18], "genom": [2, 10, 15, 16, 17, 18], "atla": [2, 10, 15, 16, 17, 18], "tumor": [2, 16, 17], "mrna": [2, 10, 16], "mirna": [2, 10, 16], "methyl": [2, 10, 16, 18], "rppa": [2, 10, 16], "take": [2, 3, 6, 7, 9, 10, 14, 18], "case": [2, 3, 6, 7, 10, 11, 14, 16, 17], "construct": [2, 6, 7, 9, 14, 17], "occur": [2, 3, 10, 17], "alreadi": [2, 3, 6, 7, 16, 17, 18], "instead": [2, 3, 6, 7, 10, 17], "provid": [2, 3, 6, 7, 8, 10, 14, 17, 18], "some": [2, 3, 6, 8, 10, 18], "preset": [2, 3], "make": [2, 3, 6, 7, 10, 14], "read": [2, 3, 6, 9, 10, 17, 18], "thing": [2, 3, 6, 7, 10, 18], "like": [2, 3, 6, 7, 8, 9, 10, 11, 14, 17, 18], "drug": [2, 3, 6, 8], "seq": [2, 3, 6, 8], "easier": [2, 3, 6, 7], "effect": [2, 3, 4, 6, 7, 9, 10, 14], "raw": [2, 10, 18], "h5": [2, 3, 10, 18], "direct": [2, 3, 9, 11, 16], "predefind": 2, "well": [2, 3, 6, 7, 8, 18], "dictionari": [2, 3, 6, 7, 9, 10, 11, 14, 17, 18], "updat": [2, 3, 14, 17], "anyth": [2, 3], "therefor": [2, 3, 6, 7, 17, 18], "overrid": [2, 3, 6, 7, 9, 14], "specif": [2, 3, 9, 10, 11, 14, 17], "examin": [2, 3, 9, 10, 11, 16, 17], "name_filt": 2, "singl": [2, 3, 6, 7, 8, 9, 10, 14, 18], "string": [2, 3, 6, 7, 9, 10, 11, 14, 17, 18], "typic": [2, 6, 7, 10, 17], "feature_prefix": [2, 17], "tell": 2, "treat": 2, "also": [2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "dicitonari": 2, "By": [2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18], "shortcut": [2, 3, 11], "includ": [2, 3, 6, 7, 9, 10, 11, 14, 16, 18], "doe": [2, 6, 7, 8, 10, 14], "assign": [2, 6, 10, 11], "new": [2, 3, 4, 9, 10, 14, 17, 18], "cryptograph": [2, 3], "hash": [2, 3, 9], "start": [2, 3, 9], "seed": [2, 3, 6, 8, 11, 13], "creation": [2, 3, 6, 7, 9, 10, 14], "blockchain": [2, 3], "environ": [2, 3, 16], "timestamp": [2, 3], "unavail": [2, 3], "publish": [2, 3], "subsequ": [2, 3, 17], "experi": [2, 3], "build": [2, 3, 6, 7], "up": [2, 3, 10], "provabl": [2, 3], "wai": [2, 3, 6, 7, 10, 14, 17, 18], "impli": [2, 3, 14], "numerical_column_nam": [2, 3, 18], "numerical_row_nam": [2, 3, 18], "plate_typ": [2, 3, 18], "384": [2, 3, 18], "new_well_column_nam": [2, 3, 18], "add_empty_wel": [2, 3, 18], "plate_barcode_column": [2, 3, 18], "no_sort": [2, 3, 18], "id": [2, 3, 9, 10, 17, 18], "a1": [2, 3, 17, 18], "a2": [2, 3, 17, 18], "etc": [2, 3, 6, 7, 10, 11, 14, 17, 18], "numer": [2, 3, 14, 18], "thei": [2, 3, 4, 6, 7, 10, 17, 18], "translat": [2, 3, 10, 18], "letter": [2, 3, 18], "you": [2, 10, 14, 18], "wish": [2, 6, 17, 18], "call": [2, 3, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18], "individu": [2, 6], "plate": [2, 3, 6, 7, 10, 14, 17, 18], "format": [2, 3, 6, 7, 9, 10, 16, 17], "support": [2, 3, 10, 11, 18], "even": [2, 3, 14, 18], "miss": [2, 3, 10, 14, 16, 18], "do": [2, 3, 6, 7, 10, 11, 16, 17, 18], "resort": [2, 3, 18], "composite_identifier_column": 2, "iter": [2, 4, 6, 8, 11, 14, 17, 18], "new_names_or_prefix": 2, "aggregated_": 2, "inplac": [2, 3], "transformation_lookup": [2, 3], "tranformation_lookup_default_valu": [2, 3], "aggreg": [2, 3], "have": [2, 3, 4, 6, 7, 9, 10, 11, 14, 16, 17, 18], "deriv": [2, 3, 6, 8, 10, 14, 16, 17], "field": [2, 3, 6, 7, 10, 11, 17, 18], "microscopi": [2, 3], "sensibl": [2, 3], "merg": [2, 3, 4, 10, 11, 16, 17, 18], "fov": [2, 3, 14], "filenam": [2, 3, 6, 7, 9, 11, 14, 18], "concaten": [2, 3, 4], "separ": [2, 3, 11, 14, 17, 18], "comma": [2, 3, 18], "unless": [2, 3, 14], "just": [2, 3, 6, 7, 14, 17], "barcod": [2, 3, 10, 14], "feat_1": [2, 3, 14, 18], "feat_2": [2, 3, 14, 18], "feat_3": [2, 3, 14, 18], "plate1": [2, 3, 14, 17], "filea": [2, 3, 14], "fileb": [2, 3, 14], "plate2": [2, 3, 14], "filec": [2, 3, 14], "38": [2, 3, 14], "filef": [2, 3, 14], "Will": 2, "proeduc": 2, "anoth": [2, 6, 10, 11, 15, 16, 18], "secondari": 2, "25": [2, 3, 10, 14], "40": [2, 3], "70": [2, 3], "90": [2, 3, 6, 8, 9], "15": [2, 3, 11, 16], "34": [2, 3], "biochem": [2, 3], "assai": [2, 3, 6], "identifi": [2, 3, 6, 7, 8, 10, 14, 18], "taken": [2, 3, 4, 6, 7, 9, 10, 14, 16], "creat": [2, 3, 6, 7, 10, 17, 18], "composit": 2, "undergo": 2, "It": [2, 9, 10, 11, 14, 17, 18], "mix": 2, "specifi": [2, 3, 10, 11, 17, 18], "last": [2, 6, 7, 8, 17, 18], "ad": [2, 3, 6, 7, 8, 10, 18], "them": [2, 3, 6, 7, 10, 11, 14, 17, 18], "after": [2, 6, 7, 9, 10, 11, 14, 16, 17], "prefix": [2, 3, 10, 17, 18], "place": [2, 3, 6, 7, 9, 10, 14], "overwrit": 2, "origianl": 2, "map": [2, 3, 6, 7, 9, 10, 14, 15, 17, 18], "join": [2, 3], "item": [2, 3, 6, 18], "encount": [2, 3, 6, 8, 17], "float": [2, 3, 6, 7, 8, 9, 10, 11, 14, 18], "transformation_lookup_default_valu": [2, 3], "transformation_lookup_dictionari": [2, 3], "existing_dataset": 2, "new_dataset_nam": [2, 3], "clone": 2, "held": [2, 6, 11, 16, 18], "directli": [2, 11, 14], "otherwis": [2, 16], "valueerror": [2, 3, 6, 9, 11], "dataset_ids_to_combin": 2, "new_nam": [2, 3], "often": [2, 3, 6, 7, 10, 14, 17, 18], "split": [2, 3, 11, 16, 17, 18], "screen": [2, 6, 8, 9], "instanc": [2, 3, 10], "prudent": 2, "would": [2, 3, 6, 7, 14, 17, 18], "third": 2, "newli": [2, 3, 10], "combined_dataset": 2, "ds_index_list": 2, "dataerror": [2, 3, 6, 9, 14], "properti": [2, 3, 6, 7, 10, 17], "highest": [2, 9, 14, 18], "ndarrai": [2, 6, 9, 11, 14], "No": [2, 9, 11], "": [2, 3, 6, 8, 11, 14, 17], "_description_": [2, 3, 5], "filter_field": [2, 3], "filter_data": [2, 3], "dict_path": [2, 3], "additional_item": [2, 3], "min_dataset": 2, "max_dataset": 2, "return_index": 2, "get": [2, 3, 6, 8, 10, 11, 14], "pick": [2, 6, 7], "n": [2, 5, 6, 9, 11, 14, 16, 17, 18], "multiom": [2, 10], "b": [2, 10], "c": [2, 6, 7], "alon": 2, "final": [2, 4, 6, 7, 9, 10, 17, 18], "limit": [2, 6, 18], "impos": [2, 6, 7], "leav": 2, "trippl": 2, "length": [2, 5, 6, 17], "minimum": [2, 6, 7, 9, 14, 18], "behav": [2, 18], "accept": [2, 3, 9, 14], "Its": 2, "match": [2, 3, 4, 6, 7, 9, 10, 11, 14, 17, 18], "ds_index": 2, "quiet": [2, 3, 4, 6, 7, 8], "helper": [2, 3, 11], "access": [2, 3, 10, 11, 17, 18], "underli": [2, 3, 6, 10, 17], "concis": [2, 3], "replic": [2, 3, 4, 6, 7], "behaviour": [2, 6, 7, 14, 18], "chang": [2, 3, 6, 7, 10, 14, 17], "without": [2, 3, 6, 7, 10, 11, 17], "induc": [2, 3], "warn": [2, 3, 4, 6, 8], "sha256": 2, "base64": [2, 11], "encod": [2, 11], "utf": [2, 11], "remove_origin": 2, "akin": [2, 3], "delet": [2, 3, 10, 14], "classmethod": 2, "filepath": 2, "compress": [2, 10, 11], "gzip": [2, 11], "filenotfounderror": [2, 3, 11], "unabl": 2, "dataset_nam": [2, 3, 6, 10], "input_file_path": [2, 3], "h5_kei": [2, 3], "suppi": 2, "tsv": [2, 3, 9, 10, 18], "must": [2, 3, 6, 7, 9, 10, 11, 14, 17, 18], "find": [2, 3, 6, 7, 10, 11], "relat": [2, 3], "explicitli": [2, 3, 11, 16, 17], "liter": 2, "return_merg": 2, "remove_merg": 2, "groupb": 2, "integ": [2, 3, 6], "look": [2, 11], "current": [2, 3, 9, 11, 16, 18], "caus": [2, 3, 4], "address": [2, 17], "query_dataset_name_or_index": 2, "raise_error_on_empti": 2, "recent": [2, 18], "state": [2, 3, 4, 6, 7, 11], "upon": [2, 3, 6, 7, 8, 14, 17], "record": [2, 3, 6, 10], "quick": 2, "made": [2, 4, 14], "never": [2, 6, 7], "written": [2, 6, 7, 10, 11, 17, 18], "output_filenam": [2, 14], "write": [2, 3, 6, 7, 9, 10, 11, 16, 17, 18], "compressison": 2, "dump": [2, 11], "reli": [2, 6, 7, 10, 17], "keep_prefix": [2, 3], "metadata_": [2, 3], "reduc": [2, 3, 16, 17, 18], "unus": [2, 3, 6, 7], "intermedi": [2, 3, 10, 14], "everi": [2, 3, 6, 14, 16, 17], "dure": [2, 3], "shirink": [2, 3], "automat": [2, 3, 14, 17, 18], "perturbation_label": [2, 3], "per_column_nam": [2, 3], "new_features_prefix": [2, 3], "smp_": [2, 3], "subtract": [2, 3, 6, 7], "median": [2, 3, 6, 7, 14, 18], "normalis": [2, 3, 6, 8], "variabl": [2, 3, 9, 17], "via": [2, 3, 6, 9, 10, 17], "input_fil": 2, "shrink_keep_prefix": 2, "rather": [2, 6, 7, 10, 14, 17], "shrunk": 2, "arg": [2, 11], "second": [2, 3, 6, 7, 9, 10, 17, 18], "renam": [2, 3, 17, 18], "everyth": 2, "is_dir": 2, "make_par": 2, "make_dir_if_dir": 2, "ensur": [2, 3, 6, 7], "point": [2, 6, 8, 9, 10, 14, 17], "itself": [2, 6], "file_path": 2, "cast_none_to_dict": 2, "workflow_path": 2, "program": [2, 10, 15], "entri": [2, 3, 10, 18], "concept": 2, "onward": 2, "our": [2, 10, 14, 17], "guarante": 2, "job_nam": 2, "task_list": 2, "task": [2, 10, 11, 16, 18], "complet": [2, 10, 17, 18], "job": [2, 6, 7, 18], "form": [2, 3, 6, 7, 9, 10, 17, 18], "peform": 2, "respons": [2, 6, 7], "best": [2, 3, 9, 11, 16, 18], "understood": [2, 3], "see": [2, 3, 4, 9, 10, 11, 14, 16, 17, 18], "dash": [2, 18], "scalar_projection_exampl": 2, "screening_data": 2, "features_prefix": [2, 17, 18], "feat_": [2, 18], "target_treatment_column_nam": 2, "target_treatment_column_valu": 2, "po": [2, 6, 17], "output_column_label": [2, 6, 18], "target_phenotyp": 2, "split_by_column": [2, 3, 18], "plateid": [2, 3, 17], "output_dir": [2, 3, 18], "scalar_projection_output": 2, "equival": [2, 17], "clearer": 2, "programm": 2, "consist": [2, 16, 17, 18], "guid": [2, 10], "typeerror": [2, 6, 10], "appear": [2, 9], "design": [2, 4, 6, 7, 14], "varianc": [2, 6, 8, 10, 11, 14, 17, 18], "inflat": [2, 10, 14, 17, 18], "factor": [2, 4, 10, 14, 17, 18], "detriment": [2, 18], "captur": [2, 6, 7, 8, 10, 11, 17, 18], "inform": [2, 3, 6, 7, 10, 11, 16, 17, 18], "http": [2, 3, 6, 7, 10, 14, 17, 18], "en": [2, 10, 18], "wikipedia": [2, 10, 18], "org": [2, 6, 7, 10, 14, 17, 18], "wiki": [2, 10, 18], "variance_inflation_factor": [2, 18], "computation": [2, 14, 18], "expens": [2, 14, 18], "linear": [2, 10, 18], "run": [2, 6, 7, 8, 11, 14, 16, 17, 18], "almost": [2, 18], "target_dataset": [2, 18], "absent": [2, 3, 10, 14, 18], "vif_cutoff": [2, 14, 18], "cutoff": [2, 3, 6, 7, 10, 14, 17, 18], "good": [2, 10, 18], "balanc": 2, "min_featur": [2, 14, 18], "too": [2, 14, 17, 18], "mani": [2, 3, 6, 7, 9, 10, 14, 17, 18], "remain": [2, 18], "boolean": [2, 11, 18], "resolv": [2, 18], "tradit": [2, 6, 18], "alpha": [2, 18], "wellid": [2, 3, 17, 18], "notat": [2, 10, 17, 18], "bellow": [2, 18], "bahav": [2, 18], "document": [2, 11, 14, 16, 17, 18], "further": [2, 3, 6, 7, 10, 11, 14, 16, 17, 18], "detail": [2, 6, 7, 10, 18], "help": [2, 6, 7, 10, 17], "known": [2, 10, 11, 18], "target_perturbation_column_nam": [2, 6, 18], "normal": [2, 6, 7, 8, 10, 14, 18], "target_perturbation_column_valu": [2, 6, 18], "previous": 2, "simpli": [2, 6, 7, 10, 14, 18], "how": [2, 4, 5, 6, 7, 18], "from_column": 2, "to_column": 2, "keyerror": [2, 3, 11], "reorder": [2, 18], "column_nam": [2, 3, 18], "regular": [2, 17, 18], "express": [2, 6, 7, 8, 17, 18], "singular": [2, 11, 16, 18], "regex": [2, 3, 18], "ideal": [2, 18], "veri": [2, 3, 6, 7, 14, 18], "increas": [2, 4, 18], "comfort": [2, 18], "pearson": [2, 6, 14, 18], "coeffici": [2, 6, 7, 14, 18], "r": [2, 18], "suitabl": [2, 9, 11, 16, 18], "n_before_vif": [2, 14, 18], "deal": [2, 14, 18], "time": [2, 6, 7, 14, 16, 18], "consum": [2, 14, 18], "most": [2, 3, 6, 10, 14, 18], "1000": [2, 6, 7, 8, 14, 18], "consid": [2, 6, 7, 14, 18], "theshold": [2, 18], "threshold": [2, 6, 7, 14, 18], "both": [2, 3, 4, 6, 8, 16, 17, 18], "removeduntil": [2, 18], "activ": [2, 6, 8, 18], "until": [2, 4, 14, 16, 18], "equal": [2, 14, 18], "act": [2, 3, 14, 18], "stop": [2, 14, 18], "matter": [2, 14, 18], "alow": [2, 6, 9, 18], "certain": [2, 6, 7, 18], "query_column": [2, 3, 18], "query_valu": [2, 18], "discard": [2, 3, 18], "non": [2, 3, 4, 6, 7, 10, 17, 18], "plural": 2, "blank": [2, 18], "clean": [2, 18], "inclus": [2, 10, 17, 18], "establish": [2, 18], "condit": [2, 18], "onther": [2, 18], "regex_queri": [2, 18], "omit": [2, 18], "target_column": [2, 17, 18], "regex_target": [2, 18], "indexerror": 2, "pakcageddataset": [2, 18], "runnabl": 2, "worflow": 2, "There": [2, 18], "firstli": 2, "initi": [2, 17], "addit": [2, 3, 6, 7, 9, 10, 11, 14, 16, 17, 18], "special": [2, 3, 6, 7, 17, 18], "keyword": [2, 9, 14, 18], "depth": [2, 18], "sep": [2, 3, 17, 18], "skiprow": [2, 17, 18], "skip": [2, 18], "begin": [2, 17, 18], "header_row_numb": [2, 18], "header": [2, 17, 18], "transcriptom": [2, 18], "transposit": [2, 18], "sampl": [2, 3, 4, 6, 7, 8, 10, 11, 14, 16, 18], "wise": [2, 18], "index_col": [2, 17, 18], "forc": [2, 18], "e": [2, 18], "malform": [2, 18], "delimit": [2, 3, 18], "end": [2, 6, 7, 14, 17, 18], "secondli": 2, "working_dir": 2, "download": [2, 3, 10, 16], "docstr": [2, 9], "princip": [2, 10, 14, 16], "compon": [2, 6, 8, 10, 14, 16], "2d": [2, 6, 9, 14, 17, 18], "usual": [2, 3, 6, 7, 8, 10, 11, 18], "center": [2, 3, 14, 18], "center_by_median": [2, 14, 18], "fit_perturbation_id": [2, 14], "whole": [2, 18], "ranam": 2, "old": [2, 14, 18], "name_from": [2, 18], "name_to": [2, 18], "reject": [2, 6, 18], "quantifi": [2, 6, 18], "off": [2, 6, 18], "heiser": [2, 6, 18], "kati": [2, 6, 18], "et": [2, 6, 7, 8, 16, 17, 18], "al": [2, 6, 7, 8, 16, 17, 18], "identif": [2, 6, 18], "covid": [2, 6, 18], "19": [2, 6, 18], "artifici": [2, 4, 6, 10, 16, 17, 18], "intellig": [2, 3, 6, 10, 16, 17, 18], "enabl": [2, 3, 6, 8, 10, 17, 18], "phenom": [2, 6, 18], "human": [2, 6, 10, 18], "infect": [2, 6, 18], "sar": [2, 6, 18], "cov": [2, 6, 18], "biorxiv": [2, 6, 7, 18], "2020": [2, 6, 10, 18], "on_target_": [2, 18], "off_target_": [2, 18], "inch": [2, 9, 18], "destin": [2, 16, 18], "thrown": [2, 18], "mark": [2, 6, 7, 18], "expect": [2, 3, 10, 14, 17], "kwarg": [2, 3, 5, 14, 18], "fulli": [2, 18], "flexibl": [2, 18], "file_prefix": [2, 3, 18], "suffix": [2, 3, 14, 18], "file_extens": [2, 3, 18], "extens": [2, 3, 6, 7, 9, 18], "self": [2, 3, 5, 6, 9, 10, 11], "Then": [2, 3, 4, 6, 7, 9, 18], "coupl": [2, 18], "fold": [2, 3, 11, 16, 18], "cross": [2, 11, 16, 18], "valid": [2, 3, 9, 11, 16, 18], "emploi": [2, 18], "retain": [2, 14, 18], "long": [2, 6, 7, 17, 18], "your": [2, 18], "writen": [2, 9, 11, 18], "highlight": [2, 9, 16, 18], "bold": [2, 16, 18], "easi": [2, 6, 7, 10, 16, 18], "share": [2, 3, 6, 7, 11, 16, 17, 18], "machin": [2, 16, 18], "readabl": [2, 16, 18], "shuffl": [2, 6, 7, 11, 16, 18], "withhold": [2, 11, 16, 18], "train": [2, 3, 5, 11, 16, 18], "multiregress": [2, 11, 16, 18], "output_directori": [2, 11, 18], "dataset_combin": [2, 11, 18], "n_split": [2, 11, 18], "n_optuna_tri": [2, 11, 16, 18], "trial": [2, 11, 18], "drastic": [2, 18], "impact": [2, 6, 7, 18], "runtim": [2, 18], "thorough": [2, 18], "optuna_merge_fold": [2, 11, 16, 18], "report": [2, 6, 7, 11, 16, 18], "intend": [2, 11, 18], "believ": [2, 11, 18], "accur": [2, 11, 18], "accuraci": [2, 11, 18], "estim": [2, 6, 11, 18], "test_set_fract": [2, 11, 18], "fraction": [2, 6, 8, 11, 18], "total": [2, 10, 11, 18], "back": [2, 3, 11, 18], "platemap_directori": [2, 3], "platemap_csv_fil": [2, 3], "plate_name_before_underscore_in_filenam": [2, 3], "cpd": [2, 3], "intersect": [2, 3], "common": [2, 3, 6, 7, 11, 17], "experiment": 2, "conc": 2, "compound": [2, 3, 6, 7, 8, 10], "concentr": [2, 3, 6, 7, 8, 10], "technologi": 2, "alter": 2, "runtimeerror": 2, "temporari": [2, 14, 17], "ever": 2, "input_file_path_or_df": 3, "hint": [3, 17], "configur": [3, 9], "tab": [3, 18], "charact": [3, 17, 18], "assum": [3, 18], "could": [3, 11], "pars": 3, "deep": 3, "phenonautdata": 3, "output_path": [3, 6, 16], "file_suffix": 3, "wite": 3, "someth": [3, 6, 7, 14], "serv": 3, "candidate_dataset": 3, "return_best_n_indexes_and_scor": 3, "therfor": 3, "inbuilt": 3, "compar": [3, 6, 7, 8], "cdist": 3, "flag": [3, 17, 18], "higher": [3, 6, 7], "nest": [3, 9, 17], "divid": [3, 10], "retriev": [3, 10, 17], "column_label": 3, "reason": [3, 6], "happen": 3, "upda": 3, "drope": 3, "nan_cutoff": 3, "inf": 3, "percentag": [3, 6, 7, 14], "row_indic": 3, "unchang": 3, "opposit": [3, 6, 7], "column_prefix": 3, "ai": 3, "ml": [3, 10, 17, 18], "model": [3, 11, 16], "criteria": 3, "moa": [3, 10], "associ": [3, 10], "travers": 3, "forwardslash": 3, "train_val": 3, "ariv": 3, "action": 3, "modifi": 3, "untouch": 3, "dmso": [3, 6, 10], "downstream": 3, "noth": 3, "phenonautgenericdata": 3, "pad_by_perc": 3, "pad": 3, "percent": [3, 6, 7], "min_f1": 3, "max_f1": 3, "min_f2": 3, "max_f2": 3, "element": [3, 9, 10, 17], "plain": 3, "text": [3, 17, 18], "what": [3, 14], "arriv": 3, "uniquifi": [3, 17], "perturbation_colum": 3, "timepoint": [3, 6, 7, 8], "groupby_col": 3, "impute_fn": 3, "wherebi": [3, 6, 7, 14, 16, 17, 18], "identifier_column": 3, "short": [3, 10, 11], "treatement": 3, "feature_names_column": 3, "values_column": 3, "blocklist": 3, "skip_first_line_in_fil": 3, "erase_data": 3, "apply_to_non_featur": 3, "remove_prefix": 3, "predefin": 3, "featuris": 3, "exclud": [3, 6, 7], "cellular": 3, "feautur": 3, "cellprofil": 3, "figshar": 3, "com": [3, 6, 7, 10, 17, 18], "ndownload": 3, "23661539": 3, "commonli": [3, 10], "ignor": [3, 6, 7, 10], "persist": [3, 11], "removed_prefix": 3, "still": 3, "underscor": [3, 14, 17], "trasform": 3, "robustmad_": [3, 14], "robustmad_featurea": 3, "robustmad_featureb": 3, "featurea": 3, "To": [3, 6, 7, 9, 17], "deactiv": 3, "behavior": [3, 6, 7, 14], "remove_prefixed_featur": 3, "outlier_cutoff": 3, "remove_data": 3, "outlier": [3, 4, 6], "freq_cutoff": 3, "unique_cutoff": 3, "01": 3, "low": [3, 6], "adapt": [3, 6, 7], "pycytomin": 3, "variance_threshold": 3, "github": [3, 6, 7, 10, 16], "cytomin": [3, 6, 7], "blob": 3, "master": [3, 10], "py": [3, 14, 16], "sometim": [3, 6, 7], "vari": 3, "littl": [3, 6, 7], "definit": [3, 6, 8, 11, 14, 17, 18], "ratio": [3, 9], "2nd": 3, "popul": [3, 6, 9, 17], "divers": [3, 10], "from_column_nam": 3, "to_column_nam": 3, "from_to": 3, "old_nam": 3, "pat": 3, "repl": 3, "replac": [3, 17], "patter": 3, "substr": 3, "new_column": 3, "a2_cpd1_plate1": 3, "cpdid": [3, 17], "introduc": 3, "cpd1": [3, 17], "pattern": 3, "correct": [3, 6, 9], "absorb": 3, "inconsist": 3, "query_or_perturbation_nam": 3, "quantiti": 3, "substract": 3, "cpd_name": 3, "achi": 3, "basi": [3, 14], "needed": 3, "respect": [3, 6, 9, 10, 17], "aregiven": 3, "new_header_column": 3, "alia": [3, 10], "viewintegr": [4, 5], "fit_train_test_transform_test": [4, 5], "merge_splits_to_single_view": [4, 5], "multiplex_df": [4, 5], "multiplex_df_merge_single_sampl": [4, 5], "concatenate_viewintegr": [4, 5], "mvmds_viewintegr": [4, 5], "splitautoencoder_viewintegr": [4, 5], "merge_field": 4, "perfectmatch": 4, "n_random_right": 4, "random_st": [4, 5, 6, 7, 8, 11], "horizont": [4, 9], "expand": [4, 10, 17], "dateset": 4, "At": 4, "implement": [4, 6, 7, 8, 9, 10, 11, 16, 18], "enumerateal": 4, "left": [4, 5, 9], "massiv": 4, "cardin": [4, 6, 7], "4x4": 4, "essenti": [4, 10], "decis": [4, 10], "aim": [4, 6, 8], "spiral": 4, "memori": 4, "enumeratethenmatchcardin": 4, "bring": [4, 10, 14], "down": [4, 6, 14], "downsampl": [4, 6], "smooth": [4, 17], "benchmark": [4, 6], "notimplementederror": 4, "yet": 4, "datasets_train": 5, "datasets_test": 5, "mvmd": 5, "val": 5, "view1_train": 5, "view1_val": 5, "view1_test": 5, "static": 5, "_summary_": [5, 14], "drop_non_critical_data": 5, "shuffle_joined_dataset": 5, "keep_metadata_column": 5, "concatenatevieswintegr": 5, "mvmdsviewintegr": 5, "splitautoencoderviewintegr": 5, "point1": 6, "point2": 6, "multidimension": [6, 8], "z": 6, "measurmen": 6, "1d": 6, "3d": 6, "cloud": 6, "covari": [6, 8], "empiricalcovari": 6, "mincovdet": 6, "particularli": 6, "sensit": 6, "robust": 6, "supppli": 6, "recomend": 6, "sqrt": 6, "approxim": 6, "ident": [6, 14], "concern": 6, "squar": [6, 9, 14], "d2": 6, "mrc": 6, "cbu": 6, "cam": 6, "ac": 6, "uk": 6, "statswiki": 6, "faq": 6, "euclid": 6, "belong": [6, 10, 14], "chi2": 6, "degre": [6, 10], "freedom": 6, "mxn": 6, "fairli": 6, "much": [6, 7], "instanti": [6, 7, 9, 14, 17], "subclass": 6, "empiracalcovari": 6, "slice": 6, "spreat": 6, "target_featur": 6, "return_datafram": 6, "subset": [6, 14], "sepal": [6, 17], "cm": [6, 9, 17], "width": [6, 9, 17], "petal": [6, 17], "60": [6, 17], "tempfil": 6, "namedtemporaryfil": 6, "tmp": [6, 17], "n5": 6, "n7": 6, "n6": 6, "n4": 6, "flush": 6, "flower": 6, "features_regex": [6, 17], "correlation_to_pet": 6, "914639": 6, "448289": 6, "544665": 6, "448289248746271": 6, "9146393603234955": 6, "5446646166252519": 6, "kendal": 6, "tau": 6, "spearman": [6, 7], "datfram": 6, "norm": 6, "target_treatmentid": 6, "treatmentid": 6, "higher_is_bett": 6, "librari": [6, 7, 9, 10, 16], "tradition": 6, "These": [6, 10, 17], "unbound": 6, "max": [6, 9], "alwai": [6, 7, 14], "dissimilar": 6, "scientif": 6, "literatur": [6, 17], "coerc": 6, "turn": [6, 7, 11, 14], "zhang": 6, "anchor": 6, "signatur": [6, 17, 18], "shu": 6, "dong": 6, "timothi": 6, "gant": 6, "connect": [6, 10, 15, 17, 18], "small": [6, 10, 17, 18], "molecul": [6, 10, 17, 18], "gene": [6, 7, 10, 17, 18], "bmc": 6, "bioinformat": 6, "2008": 6, "steven": 6, "shave": 6, "doi": [6, 8], "1186": 6, "1471": 6, "2105": 6, "258": 6, "sequenc": 6, "file_or_dir": 6, "dir_glob": 6, "pc_": 6, "get_percent_compact": 6, "glob": 6, "contribut": [6, 14], "percentile_cutoff": [6, 7], "95": [6, 7], "n_resampl": 6, "similarity_metric_higher_is_bett": [6, 7, 8], "n_job": [6, 7, 8, 14], "confid": 6, "interv": 6, "percentil": [6, 7], "bootstrap": 6, "null": [6, 7], "bound": [6, 7, 11], "100": [6, 7, 13, 16], "95th": [6, 7], "resampl": 6, "joblib": [6, 7], "parallel": [6, 7, 8], "thread": [6, 7], "system": [6, 7, 8], "percentile_rang": 6, "101": 6, "percentile_step_s": 6, "return_count": 6, "return_full_performance_df": [6, 7, 8], "coordin": 6, "cover": 6, "inkeep": 6, "stepsiz": 6, "mathch": 6, "pr_": 6, "if_no_json_use_filename_to_derive_info": 6, "get_percent_repl": 6, "legaci": 6, "did": [6, 11], "attempt": [6, 7, 11, 14], "phenotypic_metr": [6, 7, 8], "allowed_pert_inam": 6, "max_cardin": [6, 7], "cdu_dir": 6, "ds_groupbi": [6, 8], "reference_perturbation_queri": [6, 8], "pca_explained_vari": [6, 8], "99": [6, 8], "std_scaler_column": [6, 8], "std_scaler_row": [6, 8], "n_iter": [6, 7, 8], "42": [6, 7, 8], "raise_error_for_low_count_group": [6, 8], "mp": [6, 8], "hutz": [6, 8], "je": [6, 8], "nelson": [6, 8], "wu": [6, 8], "h": [6, 8, 9, 10], "throughput": [6, 8], "journal": [6, 8], "biomolecular": [6, 8], "2013": [6, 8, 16, 17, 18], "18": [6, 8, 9], "367": [6, 8], "377": [6, 8], "1177": [6, 8], "1087057112469257": [6, 8], "mention": [6, 8], "explain": [6, 8, 14], "somewhat": [6, 8], "pycytominer_ev": [6, 8], "deviat": [6, 8, 9, 16], "mixin": [6, 8], "matric": [6, 8], "posit": [6, 7, 8, 9, 14], "specific": [6, 8], "ev": [6, 8], "processor": [6, 8, 14], "autodetect": [6, 8], "rng": [6, 8], "mp_valu": [6, 8], "three": [6, 8, 17], "replicate_criteria": [6, 7, 8], "replicate_queri": [6, 7], "replicate_criteria_not": [6, 7], "null_query_or_df": [6, 7], "null_criteria": [6, 7], "null_criteria_not": [6, 7], "restrict_evaluation_queri": [6, 7], "similarity_metr": [6, 7, 8], "min_cardin": [6, 7], "50": [6, 7, 8, 14], "include_cardinality_violating_compounds_in_calcul": [6, 7], "additional_captured_param": [6, 7], "similarity_metric_nam": [6, 7], "performance_df_fil": [6, 7], "spread": [6, 7], "randomli": [6, 7], "background": [6, 7, 9], "its": [6, 7, 9, 11, 14, 18], "reffer": [6, 7], "pairwis": [6, 7], "5th": [6, 7], "although": [6, 7, 10], "criteri": [6, 7], "compos": [6, 7], "demand": [6, 7], "discov": [6, 7], "interrog": [6, 7, 14], "disregard": [6, 7], "dose": [6, 7], "enforc": [6, 7, 10], "pert_idose_um": [6, 7], "mayb": [6, 7], "pleas": [6, 7, 17], "go": [6, 7], "effici": [6, 7], "prefilt": [6, 7], "restrict": [6, 7], "ineffici": [6, 7], "NOT": [6, 7], "exot": [6, 7], "compris": [6, 7], "drawn": [6, 7], "orign": [6, 7], "appart": [6, 7], "idenfi": [6, 7], "chosen": [6, 7, 11, 16], "few": [6, 7], "pdist": [6, 7], "wors": [6, 7], "faster": [6, 7], "corrcoef": [6, 7], "constraint": [6, 7], "eval": [6, 7], "measument": [6, 7], "posibl": [6, 7], "comparison": [6, 7, 14], "nth": [6, 7], "thousand": [6, 7], "synthet": [6, 7], "cut": [6, 7], "dramat": [6, 7], "enough": [6, 7], "compactness_result": [6, 7], "autogener": [6, 7], "nice": [6, 7], "succinct": [6, 7], "__repr__": [6, 7], "parallelis": [6, 7], "analys": [6, 7], "phenotypic_metric_higher_is_bett": [6, 7], "include_replicate_pairwise_distances_in_df": [6, 7], "gregori": [6, 7], "morphologi": [6, 7], "complementari": [6, 7], "13": [6, 7, 17], "11": [6, 7], "2022": [6, 7, 17, 18], "911": [6, 7], "923": [6, 7], "www": [6, 7, 10], "1101": [6, 7], "2021": [6, 7, 10, 16, 17, 18], "21": [6, 7], "465335v2": [6, 7], "issu": [6, 7, 10], "issuecom": [6, 7], "902934931": [6, 7], "varieti": [6, 7, 16], "observ": [6, 7], "groupby_nul": [6, 7], "versu": [6, 7], "relax": [6, 7], "pr_result": [6, 7], "settiung": [6, 7], "dont": [6, 7], "displai": [6, 7, 9, 14, 17], "progressbar": [6, 7], "query_group_queri": [6, 8], "10000": [6, 8], "return_full_results_df": [6, 8], "max_samples_in_a_group": [6, 8], "no_error_on_empty_queri": [6, 8], "n_trial": 6, "replicate_groupbi": 6, "dmso_queri": 6, "run_percent_repl": 6, "run_permutation_test_against_dmso": 6, "run_auroc": 6, "run_distinct_type2": 6, "return_full_result": 6, "permtest_iter": 6, "pctrep_iter": 6, "permtest_type2_tri": 6, "permtest_type2_cardin": 6, "json_serialize_datafram": 6, "permut": 6, "compactness_percent_repl": 6, "distinctness_percent_permutation_test": 6, "uniqueness_auroc_mean": 6, "percent_replicating_df": 6, "percent_distinct_df": 6, "uniqueness_auroc_df": 6, "cdu": 6, "discoveri": 6, "rate": [6, 16, 18], "break": 6, "compair": 6, "membership": 6, "type2": 6, "dummi": 6, "inter": 6, "serial": 6, "results_dict": 6, "test_split": 6, "x_label_in_df": 9, "y_label_in_df": 9, "output_fil": 9, "x_label": 9, "y_label": 9, "orient": 9, "height": 9, "dictat": [9, 14], "vertic": 9, "standard_deviations_df": 9, "figure_dpi": 9, "vmin": 9, "vmax": 9, "annotation_fonts": 9, "annotation_best_fonts": 9, "2f": 9, "annotation_format_string_std": 9, "3f": 9, "pallet_nam": 9, "seagreen": 9, "colormap": 9, "svg": 9, "uisng": 9, "box": 9, "colour": [9, 18], "aspect": 9, "resolut": 9, "dot": 9, "shade": 9, "lowest": 9, "font": 9, "pallet": 9, "bar": 9, "pairplot": 9, "cover_titl": 9, "cover_subtitl": 9, "template_fil": 9, "experiment_hash": 9, "slide": 9, "main": [9, 10, 18], "subtitl": 9, "templat": 9, "img_fil": 9, "done": [9, 14], "output_pptx_fil": 9, "plot_config": 9, "show_legend": 9, "marker_s": 9, "axis_rang": 9, "member": [9, 17], "inherit": [9, 10, 11, 17], "plot_mark": 9, "config": 9, "pert1": 9, "pert2": 9, "datapoint": [9, 14], "extent": 9, "correspond": 9, "calcaul": 9, "pertub": [9, 14, 18], "let": 9, "draw": 9, "output_image_path": 9, "savefig_kwarg": 9, "df_name": [9, 10], "xlsx": 9, "sheet": 9, "embed": [9, 14, 17], "advantag": [9, 14], "situat": 9, "increment": 9, "posixpath": 10, "raw_data": 10, "raw_data_dir_relative_to_root": 10, "abc": [10, 11, 14], "mnist": [10, 17, 18], "fashionmnist": 10, "preprocess": 10, "grant": 10, "getter": 10, "setter": 10, "properli": 10, "handl": 10, "batch_download": 10, "simplifi": [10, 17], "remot": 10, "processed_dataset_exist": 10, "raw_dataset_exist": 10, "presenc": [10, 17], "super": 10, "__init__": 10, "regist": 10, "convent": 10, "registr": 10, "own": [10, 14, 17], "abstractbaseclass": 10, "usabl": 10, "prior": 10, "put": [10, 17], "subdirectori": 10, "possibli": 10, "step": [10, 16, 17], "li": 10, "absolut": [10, 14], "abstract": 10, "getth": 10, "unprocess": 10, "accompani": 10, "hdf5": 10, "__getitem__": 10, "pdf": 10, "rm_downloaded_data": 10, "breast": [10, 17, 18], "wisconsin": [10, 17, 18], "diagnost": [10, 17, 18], "stabl": [10, 14], "toy_dataset": 10, "html": [10, 14, 17, 18], "archiv": [10, 17, 18], "ic": [10, 17, 18], "uci": [10, 17, 18], "edu": [10, 17, 18], "569": 10, "fine": 10, "needl": 10, "aspir": 10, "30": 10, "benign": [10, 17], "malign": [10, 17], "datafil": 10, "scratch": 10, "disk": [10, 11], "landmark_onli": 10, "connectivitymap": 10, "clue": 10, "io": 10, "crisper": 10, "interfac": [10, 16, 17], "gctx": 10, "resid": [10, 18], "tool": 10, "sig_info": 10, "pert_id": 10, "pert_idos": 10, "pert_itim": 10, "distil_id": 10, "ctl_vehicl": 10, "trt_cp": 10, "33": 10, "um": 10, "\u00b5m": 10, "unit": 10, "666": 10, "connectopedia": 10, "glossari": 10, "queryabl": 10, "creation_d": 10, "date": 10, "gene_info": 10, "pert_info": 10, "info": [10, 14], "smile": 10, "sig_metr": 10, "inst_info": 10, "rebuild": 10, "landmark": 10, "infer": [10, 11, 18], "abund": 10, "major": 10, "ashighli": 10, "colinear": 10, "allowed_treatment_typ": 10, "allowed_treatment_tim": 10, "level4": 10, "vehicl": 10, "perturbagen_types_and_control": 10, "interest": 10, "24hr": 10, "databas": [10, 11], "hr": 10, "four": [10, 11, 16], "lean": [10, 14], "auto_exampl": [10, 14], "plot_iris_dataset": 10, "iris_flower_data_set": 10, "paint": 10, "supplier": 10, "broad": 10, "institut": 10, "pait": 10, "broadinstitut": 10, "repurposing_simpl": 10, "githubusercont": 10, "commentari": 10, "resourc": 10, "jump": 10, "consortium": 10, "cellpaint": 10, "rm_intermedi": 10, "prediction_target": [10, 16], "num_pca_dim": 10, "vif_filter_cutoff": 10, "custom_transformation_func_and_name_tupl": 10, "snapshot": 10, "websit": 10, "gov": 10, "about": 10, "nci": 10, "organ": 10, "ccg": 10, "research": 10, "molecularli": 10, "character": 10, "000": 10, "primari": 10, "span": [10, 16], "joint": 10, "effort": 10, "nation": 10, "began": 10, "2006": [10, 17, 18], "disciplin": 10, "lee": [10, 16, 17, 18], "changhe": [10, 16, 17, 18], "mihaela": [10, 16, 17, 18], "schaar": [10, 16, 17, 18], "variat": [10, 16, 17, 18], "bottleneck": [10, 16, 17, 18], "confer": [10, 16, 17, 18], "pmlr": [10, 16, 17, 18], "clinical_decis": 10, "tcga_pca": 10, "_phenonaut": 10, "_metadata_phenonaut": 10, "undertaken": 10, "186": 10, "tar": 10, "gb": 10, "32": 10, "tumour": [10, 17], "On": 10, "modest": 10, "hardwar": 10, "sec": 10, "mb": 10, "29": 10, "102": 10, "6gb": 10, "createda": 10, "want": 10, "days_to_death": [10, 16], "get_clinical_decisions_column": 10, "tumor_tissue_sit": 10, "gender": 10, "years_to_death": 10, "365": 10, "zif": 10, "prefer": 10, "wherea": 10, "tcga_": 10, "custom_callable_id": 10, "customtransform": 10, "load_csv_kwarg": 10, "output_file_nam": 10, "header_offset": 10, "treatment_id": 10, "treatment_lambda": 10, "frame": 10, "clinical_decision_column": 10, "new_df_column_nam": 10, "custom_func": 10, "remove_incomplete_row": 10, "come": [10, 11], "patient": [10, 16], "ag": [10, 16], "dai": 10, "death": [10, 16], "year": [10, 16, 18], "hybrid": 10, "ref": 10, "clinical_decit": 10, "convert": [10, 11], "virtu": 10, "pytorch_model": [11, 12], "dave": [11, 12], "multiregressor_nn": [11, 12], "ob_str": 11, "gzipe": 11, "decompress": 11, "ob": 11, "serialis": 11, "serializ": 11, "x_test": 11, "y_test": 11, "prediction_typ": 11, "phe_nam": 11, "optuna_db_path": 11, "optuna_db_protocol": 11, "sqlite": 11, "target_dataset_nam": 11, "led": 11, "pack": 11, "assess": 11, "sqlite3": 11, "determinist": 11, "pre": 11, "_type_": 11, "protocol": 11, "storag": 11, "column_containing_valu": 11, "test_scor": 11, "hyperapramet": 11, "optua": 11, "hyperparameterscan": 11, "dataframes_list": 11, "optuna_db_fil": 11, "csv_output_filenam": 11, "json_output_filenam": 11, "get_only_best_per_studi": 11, "sqlite3fil": 11, "studi": 11, "sumaris": 11, "variou": 11, "understand": [11, 18], "accuracy_scor": 11, "mse": 11, "mean_squared_error": 11, "rmse": 11, "root_mean_squared_error": 11, "area_under_roc_curv": 11, "preditiontyp": 11, "cannot": 11, "prediciton": 11, "try": 11, "head": 11, "categor": 11, "loguniform": 11, "kwd": 11, "baseestim": 11, "factori": 11, "wrap": [11, 14], "augment": 11, "no_output": 11, "write_pptx": 11, "survives_1_year": [11, 16], "ye": [11, 16, 18], "neural": [11, 16], "network": [11, 16], "4x": [11, 16], "6x": [11, 16], "doubl": [11, 16], "tripl": [11, 16], "1x": [11, 16], "quad": [11, 16], "align": 11, "problem": 11, "default_classifi": 11, "default_regressor": 11, "default_multiregressor": 11, "proper": [11, 17], "inspect": 11, "area_under_roc_curvebi": 11, "save_model": 11, "later": 11, "loss_funct": [12, 13], "multiregressornn": [12, 13], "batch_siz": 13, "1024": 13, "learning_r": 13, "001": [13, 14], "epoch": 13, "num_hidden_lay": 13, "recon_xa": 13, "recon_xb": 13, "xa": 13, "xb": 13, "mua": 13, "mub": 13, "logvara": 13, "logvarb": 13, "128": 13, "hidden_layer_s": 13, "use_optim": 13, "adam": 13, "emb": 14, "recentr": 14, "pertubation_column": 14, "predict_proba": 14, "probabl": 14, "scree": 14, "pc": 14, "verbos": [14, 16], "lot": 14, "becuas": 14, "skree": 14, "attach": 14, "centering_funct": 14, "fit_queri": 14, "explain_variance_in_featur": 14, "overridden": 14, "descriptor": 14, "umap_kwarg": 14, "neighbor": 14, "n_neighbor": 14, "n_compon": 14, "overwritten": 14, "uamp": 14, "weight": 14, "knnimputed_": 14, "scikitlearn": 14, "neighborhood": 14, "invers": 14, "prepend": 14, "rf_kwarg": 14, "max_it": 14, "tol": 14, "rfimputed_": 14, "randomforestimput": 14, "inspir": 14, "plot_iterative_imputer_variants_comparison": 14, "sphx": 14, "glr": 14, "variant": 14, "care": 14, "advis": 14, "randomforestregressor": 14, "forest": [14, 16], "ensembl": [14, 17], "converg": 14, "toler": 14, "smaller": 14, "1e": 14, "strategi": 14, "fill_valu": 14, "imputed_": 14, "most_frequ": 14, "constant": 14, "fill": 14, "corr_kwarg": 14, "corr": 14, "chanig": 14, "mad_scal": 14, "epsilon": 14, "stdscaler_": 14, "strong": 14, "use_featur": 14, "zca_": 14, "whiten": 14, "y_or_ycolumnlabel": 14, "messag": [14, 17], "transformer_nam": 14, "callable_kwarg": 14, "fit_kwarg": 14, "transform_kwarg": 14, "fit_transform_kwarg": 14, "perfom": 14, "decomposit": 14, "t_pca": 14, "ab": 14, "instantiat": 14, "standardscaler_": 14, "feat2": 14, "standardscaler_feat_1": 14, "standardscaler_feat_2": 14, "standardscaler_feat_3": 14, "method_nam": 14, "free_memory_after_transform": 14, "fallback": 14, "deduc": 14, "utilis": 15, "weinstein": [16, 17, 18], "clinic": 16, "donor": 16, "smoke": 16, "statu": 16, "surviv": [16, 18], "product": 16, "example1_tcga": 16, "consider": 16, "longer": 16, "fire": 16, "minim": 16, "suffici": 16, "john": [16, 17, 18], "pan": [16, 17, 18], "natur": [16, 17, 18], "genet": [16, 17, 18], "45": [16, 17, 18], "1113": [16, 17, 18], "1120": [16, 17, 18], "van": [16, 17, 18], "der": [16, 17, 18], "summ": 16, "overal": 16, "run_phenonaut_tcga": 16, "tcga_path": 16, "run_predictor": 16, "optuna_tri": 16, "__name__": 16, "__main__": 16, "example_1_predict_surviv": [16, 18], "survives_1_yr": [16, 18], "capabl": [17, 18], "onlin": 17, "constantli": 17, "permit": 17, "shorthand": 17, "accessor": 17, "alic": 17, "bob": 17, "easili": 17, "pkl": 17, "encapsul": 17, "monitor": 17, "sort": 17, "small_iri": 17, "featrures_regex": 17, "word": 17, "surround": 17, "log": 17, "new_featur": 17, "explanation_str": 17, "explan": 17, "went": 17, "namedtupl": 17, "tmpcu2rpsai": 17, "initial_featur": 17, "manipul": 17, "fake": 17, "a3": 17, "vastli": 17, "var1": 17, "var2": 17, "ensg00000225972": 17, "a1_cpd1_plate1": 17, "0185": 17, "ensg00000225630": 17, "1539": 17, "a2_cpd2_plate1": 17, "6661": 17, "6130": 17, "a3_cpd3_plate1": 17, "1234": 17, "8436": 17, "a4_pos_ctrl_plate1": 17, "fortun": 17, "pos_": 17, "invok": 17, "1st": 17, "wellnam": 17, "cpd2": 17, "cpd3": 17, "pos_ctrl": 17, "grasp": 17, "idea": 17, "behind": 17, "pydata": [17, 18], "doc": [17, 18], "user_guid": 17, "undo": 17, "seq_input_fil": 17, "ensg": 17, "develop": 17, "encourag": 17, "submit": 17, "pull": 17, "contact": 17, "author": 17, "v1": 17, "releas": 17, "lamb": [17, 18], "yann": [17, 18], "justin": [17, 18], "diseas": [17, 18], "scienc": [17, 18], "313": [17, 18], "5795": [17, 18], "1929": [17, 18], "1935": [17, 18], "lecun": [17, 18], "exdb": [17, 18], "visit": [17, 18], "27": [17, 18], "usag": [17, 18], "bc_packaged_dataset": 17, "linux": 17, "apart": 17, "31": 17, "worst": 17, "textur": 17, "symmetri": 17, "concav": 17, "perimet": 17, "fractal": 17, "exploit": 17, "distinguish": 17, "appar": 17, "abl": 18, "standardis": 18, "phenonuat": 18, "respres": 18, "customari": 18, "si": 18, "materi": 18, "rout": 18, "filetyp": 18, "conjunct": 18, "cell_paint": 18, "pca_cell_paint": 18, "plate_id": 18, "split_output": 18, "column_x": 18, "row_i": 18, "new_feat_1": 18, "new_feat_2": 18, "new_feat_3": 18, "interchang": 18, "coiumn": 18, "valid_wel": 18, "infat": 18, "condition": 18, "dispense_volum": 18, "fit_perturb": 18, "target_perturbation_column": 18, "control_nam": 18, "positive_control": 18, "sproj": 18, "dist": 18, "compound_id": 18, "scatter_pca_cell_paint": 18}, "objects": {"": [[2, 0, 0, "-", "phenonaut"]], "phenonaut": [[2, 1, 1, "", "Phenonaut"], [2, 1, 1, "", "PlatemapQuerier"], [3, 0, 0, "-", "data"], [2, 5, 1, "", "dataset_intersection"], [2, 0, 0, "-", "errors"], [4, 0, 0, "-", "integration"], [2, 5, 1, "", "load"], [2, 5, 1, "", "match_perturbation_columns"], [6, 0, 0, "-", "metrics"], [9, 0, 0, "-", "output"], [10, 0, 0, "-", "packaged_datasets"], [2, 0, 0, "-", "phenonaut"], [11, 0, 0, "-", "predict"], [14, 0, 0, "-", "transforms"], [2, 0, 0, "-", "utils"], [2, 0, 0, "-", "workflow"]], "phenonaut.Phenonaut": [[2, 2, 1, "", "add_well_id"], [2, 2, 1, "", "aggregate_dataset"], [2, 2, 1, "", "append"], [2, 2, 1, "", "clone_dataset"], [2, 2, 1, "", "combine_datasets"], [2, 3, 1, "", "data"], [2, 2, 1, "", "describe"], [2, 3, 1, "", "df"], [2, 3, 1, "", "ds"], [2, 2, 1, "", "filter_datasets_on_identifiers"], [2, 2, 1, "", "get_dataset_combinations"], [2, 2, 1, "", "get_dataset_index_from_name"], [2, 2, 1, "", "get_dataset_names"], [2, 2, 1, "", "get_df_features_perturbation_column"], [2, 2, 1, "", "get_hash_dictionary"], [2, 2, 1, "", "groupby_datasets"], [2, 2, 1, "", "keys"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_dataset"], [2, 2, 1, "", "merge_datasets"], [2, 2, 1, "", "new_dataset_from_query"], [2, 2, 1, "", "revert"], [2, 2, 1, "", "save"], [2, 2, 1, "", "shrink"], [2, 2, 1, "", "subtract_median_perturbation"]], "phenonaut.PlatemapQuerier": [[2, 2, 1, "", "get_compound_locations"], [2, 4, 1, "", "plate_to_cpd_to_well_dict"], [2, 4, 1, "", "platemap_files"]], "phenonaut.data": [[3, 0, 0, "-", "dataset"], [3, 0, 0, "-", "platemap_querier"], [3, 0, 0, "-", "recipes"]], "phenonaut.data.dataset": [[3, 1, 1, "", "Dataset"], [3, 1, 1, "", "TransformationHistory"]], "phenonaut.data.dataset.Dataset": [[3, 2, 1, "", "add_well_id"], [3, 2, 1, "", "copy"], [3, 3, 1, "", "data"], [3, 2, 1, "", "df_to_csv"], [3, 2, 1, "", "df_to_multiple_csvs"], [3, 2, 1, "", "distance_df"], [3, 2, 1, "", "divide_mean"], [3, 2, 1, "", "divide_median"], [3, 2, 1, "", "drop_absent_features"], [3, 2, 1, "", "drop_columns"], [3, 2, 1, "", "drop_nans_with_cutoff"], [3, 2, 1, "", "drop_rows"], [3, 3, 1, "", "features"], [3, 2, 1, "", "filter_columns"], [3, 2, 1, "", "filter_columns_with_prefix"], [3, 2, 1, "", "filter_inplace"], [3, 2, 1, "", "filter_on_identifiers"], [3, 2, 1, "", "filter_rows"], [3, 2, 1, "", "get_df_features_perturbation_column"], [3, 2, 1, "", "get_ds_from_query"], [3, 2, 1, "", "get_feature_ranges"], [3, 2, 1, "", "get_history"], [3, 2, 1, "", "get_non_feature_columns"], [3, 2, 1, "", "get_unique_perturbations"], [3, 2, 1, "", "get_unique_treatments"], [3, 2, 1, "", "groupby"], [3, 3, 1, "", "history"], [3, 2, 1, "", "impute_nans"], [3, 2, 1, "", "new_aggregated_dataset"], [3, 3, 1, "", "num_features"], [3, 3, 1, "", "pcol"], [3, 3, 1, "", "perturbation_column"], [3, 2, 1, "", "pivot"], [3, 2, 1, "", "remove_blocklist_features"], [3, 2, 1, "", "remove_features_with_outliers"], [3, 2, 1, "", "remove_low_variance_features"], [3, 2, 1, "", "rename_column"], [3, 2, 1, "", "rename_columns"], [3, 2, 1, "", "replace_str"], [3, 2, 1, "", "shrink"], [3, 2, 1, "", "split_column"], [3, 2, 1, "", "subtract_func_results_on_features"], [3, 2, 1, "", "subtract_mean"], [3, 2, 1, "", "subtract_median"], [3, 2, 1, "", "subtract_median_perturbation"], [3, 2, 1, "", "transpose"]], "phenonaut.data.dataset.TransformationHistory": [[3, 4, 1, "", "description"], [3, 4, 1, "", "features"]], "phenonaut.data.platemap_querier": [[3, 1, 1, "", "PlatemapQuerier"]], "phenonaut.data.platemap_querier.PlatemapQuerier": [[3, 2, 1, "", "get_compound_locations"], [3, 4, 1, "", "plate_to_cpd_to_well_dict"], [3, 4, 1, "", "platemap_files"]], "phenonaut.errors": [[2, 6, 1, "", "NotEnoughRowsError"]], "phenonaut.integration": [[4, 5, 1, "", "concatenate_datasets_horizontally"], [5, 0, 0, "-", "integrators"]], "phenonaut.integration.integrators": [[5, 1, 1, "", "Concatenate_ViewIntegrator"], [5, 1, 1, "", "MVMDS_ViewIntegrator"], [5, 1, 1, "", "SplitAutoencoder_ViewIntegrator"], [5, 0, 0, "-", "base"], [5, 0, 0, "-", "classic"]], "phenonaut.integration.integrators.Concatenate_ViewIntegrator": [[5, 2, 1, "", "__call__"]], "phenonaut.integration.integrators.MVMDS_ViewIntegrator": [[5, 2, 1, "", "__call__"]], "phenonaut.integration.integrators.SplitAutoencoder_ViewIntegrator": [[5, 2, 1, "", "__call__"]], "phenonaut.integration.integrators.base": [[5, 1, 1, "", "ViewIntegrator"]], "phenonaut.integration.integrators.base.ViewIntegrator": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_train_test_transform_test"], [5, 2, 1, "", "fit_transform"], [5, 2, 1, "", "merge_splits_to_single_views"], [5, 2, 1, "", "multiplex_df"], [5, 2, 1, "", "multiplex_df_merge_single_samples"], [5, 2, 1, "", "transform"]], "phenonaut.integration.integrators.classic": [[5, 1, 1, "", "Concatenate_ViewIntegrator"], [5, 1, 1, "", "MVMDS_ViewIntegrator"], [5, 1, 1, "", "SplitAutoencoder_ViewIntegrator"]], "phenonaut.integration.integrators.classic.Concatenate_ViewIntegrator": [[5, 2, 1, "", "__call__"]], "phenonaut.integration.integrators.classic.MVMDS_ViewIntegrator": [[5, 2, 1, "", "__call__"]], "phenonaut.integration.integrators.classic.SplitAutoencoder_ViewIntegrator": [[5, 2, 1, "", "__call__"]], "phenonaut.metrics": [[6, 5, 1, "", "auroc"], [7, 0, 0, "-", "compactness"], [6, 0, 0, "-", "distances"], [8, 0, 0, "-", "distinctness"], [6, 5, 1, "", "euclidean"], [6, 5, 1, "", "feature_correlation_to_target"], [6, 5, 1, "", "get_cdu_performance_df"], [6, 5, 1, "", "mahalanobis"], [6, 5, 1, "", "manhattan"], [6, 0, 0, "-", "measures"], [6, 5, 1, "", "mp_value_score"], [6, 0, 0, "-", "non_ds_phenotypic_metrics"], [6, 5, 1, "", "percent_compact"], [6, 5, 1, "", "percent_replicating"], [6, 5, 1, "", "pertmutation_test_distinct_from_query_group"], [6, 5, 1, "", "pertmutation_test_type2_distinct_from_query_group"], [6, 5, 1, "", "run_cdu_benchmarks"], [6, 5, 1, "", "scalar_projection"], [6, 5, 1, "", "silhouette_score"], [6, 5, 1, "", "treatment_spread_euclidean"], [6, 0, 0, "-", "utils"], [6, 5, 1, "", "write_cdu_json"]], "phenonaut.metrics.compactness": [[7, 5, 1, "", "percent_compact"], [7, 5, 1, "", "percent_replicating"], [7, 0, 0, "-", "pr"]], "phenonaut.metrics.compactness.pr": [[7, 5, 1, "", "percent_compact"], [7, 5, 1, "", "percent_replicating"]], "phenonaut.metrics.distances": [[6, 5, 1, "", "euclidean"], [6, 5, 1, "", "mahalanobis"], [6, 5, 1, "", "manhattan"], [6, 5, 1, "", "treatment_spread_euclidean"]], "phenonaut.metrics.distinctness": [[8, 0, 0, "-", "distinctness_measures"], [8, 5, 1, "", "mp_value_score"], [8, 5, 1, "", "pertmutation_test_distinct_from_query_group"], [8, 5, 1, "", "silhouette_score"]], "phenonaut.metrics.distinctness.distinctness_measures": [[8, 5, 1, "", "mp_value_score"], [8, 5, 1, "", "silhouette_score"]], "phenonaut.metrics.measures": [[6, 5, 1, "", "feature_correlation_to_target"], [6, 5, 1, "", "scalar_projection"]], "phenonaut.metrics.non_ds_phenotypic_metrics": [[6, 1, 1, "", "PhenotypicMetric"], [6, 5, 1, "", "calc_connectivity_scores"], [6, 5, 1, "", "calc_spearmansrank_scores"], [6, 5, 1, "", "calc_zhang_scores"], [6, 5, 1, "", "calc_zhang_scores_all_v_all"]], "phenonaut.metrics.non_ds_phenotypic_metrics.PhenotypicMetric": [[6, 2, 1, "", "__call__"], [6, 2, 1, "", "distance"], [6, 2, 1, "", "scale"], [6, 2, 1, "", "similarity"]], "phenonaut.metrics.utils": [[6, 5, 1, "", "percent_compact_summarise_results"], [6, 5, 1, "", "percent_replicating_results_dataframe_to_95pct_confidence_interval"], [6, 5, 1, "", "percent_replicating_results_dataframe_to_percentile_vs_percent_replicating"], [6, 5, 1, "", "percent_replicating_summarise_results"]], "phenonaut.output": [[9, 0, 0, "-", "boxplot"], [9, 0, 0, "-", "heatmap"], [9, 0, 0, "-", "pair_plot"], [9, 0, 0, "-", "pptx"], [9, 0, 0, "-", "scatter"], [9, 0, 0, "-", "spreadsheet"], [9, 0, 0, "-", "visualisation_base"]], "phenonaut.output.boxplot": [[9, 5, 1, "", "write_boxplot_to_file"]], "phenonaut.output.heatmap": [[9, 5, 1, "", "write_heatmap_from_df"]], "phenonaut.output.pair_plot": [[9, 5, 1, "", "show_pair_plot"]], "phenonaut.output.pptx": [[9, 1, 1, "", "PhenonautPPTX"]], "phenonaut.output.pptx.PhenonautPPTX": [[9, 2, 1, "", "add_image_slide"], [9, 2, 1, "", "save"]], "phenonaut.output.scatter": [[9, 1, 1, "", "Scatter"]], "phenonaut.output.scatter.Scatter": [[9, 2, 1, "", "add"], [9, 2, 1, "", "save_figure"], [9, 2, 1, "", "show"]], "phenonaut.output.spreadsheet": [[9, 5, 1, "", "write_xlsx"]], "phenonaut.output.visualisation_base": [[9, 1, 1, "", "PhenonautVisualisation"]], "phenonaut.packaged_datasets": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "breast_cancer"], [10, 0, 0, "-", "cmap"], [10, 0, 0, "-", "iris"], [10, 0, 0, "-", "lincs"], [10, 0, 0, "-", "metadata_moa"], [10, 0, 0, "-", "tcga"]], "phenonaut.packaged_datasets.base": [[10, 1, 1, "", "PackagedDataset"]], "phenonaut.packaged_datasets.base.PackagedDataset": [[10, 2, 1, "", "df_keys"], [10, 2, 1, "", "ds_keys"], [10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"], [10, 2, 1, "", "keys"], [10, 3, 1, "", "raw_data_dir"], [10, 2, 1, "", "register_df_key"], [10, 2, 1, "", "register_ds_key"], [10, 3, 1, "", "root"]], "phenonaut.packaged_datasets.breast_cancer": [[10, 1, 1, "", "BreastCancer"]], "phenonaut.packaged_datasets.breast_cancer.BreastCancer": [[10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.cmap": [[10, 1, 1, "", "CMAP"], [10, 1, 1, "", "CMAP_Level4"]], "phenonaut.packaged_datasets.cmap.CMAP": [[10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.cmap.CMAP_Level4": [[10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.iris": [[10, 1, 1, "", "Iris"], [10, 1, 1, "", "Iris_2_views"]], "phenonaut.packaged_datasets.iris.Iris": [[10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.iris.Iris_2_views": [[10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.lincs": [[10, 1, 1, "", "LINCS_Cell_Painting"]], "phenonaut.packaged_datasets.lincs.LINCS_Cell_Painting": [[10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.metadata_moa": [[10, 1, 1, "", "MetadataBROADLincsCellPaintingMOAs"], [10, 1, 1, "", "MetadataJUMPMOACompounds"]], "phenonaut.packaged_datasets.metadata_moa.MetadataBROADLincsCellPaintingMOAs": [[10, 2, 1, "", "__call__"], [10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.metadata_moa.MetadataJUMPMOACompounds": [[10, 2, 1, "", "__call__"], [10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.tcga": [[10, 1, 1, "", "TCGA"]], "phenonaut.packaged_datasets.tcga.TCGA": [[10, 1, 1, "", "TCGA_MetadataTuple"], [10, 2, 1, "", "add_clinical_decision_data_to_df"], [10, 2, 1, "", "get_df"], [10, 2, 1, "", "get_ds"]], "phenonaut.packaged_datasets.tcga.TCGA.TCGA_MetadataTuple": [[10, 4, 1, "", "files"], [10, 4, 1, "", "header_offset"], [10, 4, 1, "", "load_csv_kwargs"], [10, 4, 1, "", "output_file_name"], [10, 4, 1, "", "treatment_id"], [10, 4, 1, "", "treatment_lambda"]], "phenonaut.phenonaut": [[2, 1, 1, "", "Phenonaut"], [2, 5, 1, "", "load"], [2, 5, 1, "", "match_perturbation_columns"]], "phenonaut.phenonaut.Phenonaut": [[2, 2, 1, "", "add_well_id"], [2, 2, 1, "", "aggregate_dataset"], [2, 2, 1, "", "append"], [2, 2, 1, "", "clone_dataset"], [2, 2, 1, "", "combine_datasets"], [2, 3, 1, "", "data"], [2, 2, 1, "", "describe"], [2, 3, 1, "", "df"], [2, 3, 1, "", "ds"], [2, 2, 1, "", "filter_datasets_on_identifiers"], [2, 2, 1, "", "get_dataset_combinations"], [2, 2, 1, "", "get_dataset_index_from_name"], [2, 2, 1, "", "get_dataset_names"], [2, 2, 1, "", "get_df_features_perturbation_column"], [2, 2, 1, "", "get_hash_dictionary"], [2, 2, 1, "", "groupby_datasets"], [2, 2, 1, "", "keys"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_dataset"], [2, 2, 1, "", "merge_datasets"], [2, 2, 1, "", "new_dataset_from_query"], [2, 2, 1, "", "revert"], [2, 2, 1, "", "save"], [2, 2, 1, "", "shrink"], [2, 2, 1, "", "subtract_median_perturbation"]], "phenonaut.predict": [[12, 0, 0, "-", "default_predictors"], [11, 0, 0, "-", "optuna_functions"], [11, 0, 0, "-", "predict_utils"], [11, 0, 0, "-", "predictor_dataclasses"], [11, 0, 0, "-", "profile"]], "phenonaut.predict.default_predictors": [[12, 0, 0, "-", "classifiers"], [12, 0, 0, "-", "multiregressors"], [13, 0, 0, "-", "pytorch_models"], [12, 0, 0, "-", "regressors"]], "phenonaut.predict.default_predictors.pytorch_models": [[13, 0, 0, "-", "dave"], [13, 0, 0, "-", "multiregressor_nn"]], "phenonaut.predict.default_predictors.pytorch_models.dave": [[13, 1, 1, "", "DAVE"]], "phenonaut.predict.default_predictors.pytorch_models.dave.DAVE": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "loss_function"], [13, 2, 1, "", "predict"]], "phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn": [[13, 1, 1, "", "MultiRegressorNN"]], "phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn.MultiRegressorNN": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"]], "phenonaut.predict.optuna_functions": [[11, 5, 1, "", "predictor_from_str"], [11, 5, 1, "", "predictor_to_str"], [11, 5, 1, "", "run_optuna_opt"], [11, 5, 1, "", "run_optuna_opt_merge_folds"]], "phenonaut.predict.predict_utils": [[11, 1, 1, "", "PredictionType"], [11, 5, 1, "", "get_X_y"], [11, 5, 1, "", "get_best_predictor_dataset_df"], [11, 5, 1, "", "get_common_indexes"], [11, 5, 1, "", "get_df_from_optuna_db"], [11, 5, 1, "", "get_metric"], [11, 5, 1, "", "get_prediction_type_from_y"], [11, 5, 1, "", "get_y_from_target"]], "phenonaut.predict.predict_utils.PredictionType": [[11, 4, 1, "", "classification"], [11, 4, 1, "", "regression"], [11, 4, 1, "", "view"]], "phenonaut.predict.predictor_dataclasses": [[11, 1, 1, "", "HyperparameterCategorical"], [11, 1, 1, "", "HyperparameterFloat"], [11, 1, 1, "", "HyperparameterInt"], [11, 1, 1, "", "HyperparameterLog"], [11, 1, 1, "", "OptunaHyperparameter"], [11, 1, 1, "", "OptunaHyperparameterNumber"], [11, 1, 1, "", "PhenonautPredictionMetric"], [11, 1, 1, "", "PhenonautPredictor"]], "phenonaut.predict.predictor_dataclasses.HyperparameterCategorical": [[11, 4, 1, "", "choices"], [11, 4, 1, "", "needed"]], "phenonaut.predict.predictor_dataclasses.OptunaHyperparameter": [[11, 4, 1, "", "name"]], "phenonaut.predict.predictor_dataclasses.OptunaHyperparameterNumber": [[11, 4, 1, "", "lower_bound"], [11, 4, 1, "", "needed"], [11, 4, 1, "", "upper_bound"]], "phenonaut.predict.predictor_dataclasses.PhenonautPredictionMetric": [[11, 2, 1, "", "__call__"], [11, 4, 1, "", "func"], [11, 4, 1, "", "lower_is_better"], [11, 4, 1, "", "name"]], "phenonaut.predict.predictor_dataclasses.PhenonautPredictor": [[11, 4, 1, "", "conditional_hyperparameter_generator"], [11, 4, 1, "", "conditional_hyperparameter_generator_constructor_keyword"], [11, 4, 1, "", "constructor_kwargs"], [11, 4, 1, "", "dataset_size_cutoff"], [11, 4, 1, "", "embed_in_results"], [11, 4, 1, "", "max_classes"], [11, 4, 1, "", "max_optuna_trials"], [11, 4, 1, "", "name"], [11, 4, 1, "", "num_views"], [11, 4, 1, "", "optuna"], [11, 4, 1, "", "predictor"]], "phenonaut.predict.profile": [[11, 5, 1, "", "profile"]], "phenonaut.transforms": [[14, 0, 0, "-", "dimensionality_reduction"], [14, 0, 0, "-", "generic_transformations"], [14, 0, 0, "-", "imputers"], [14, 0, 0, "-", "preparative"], [14, 0, 0, "-", "supervised_transformer"], [14, 0, 0, "-", "transformer"]], "phenonaut.transforms.dimensionality_reduction": [[14, 1, 1, "", "LDA"], [14, 1, 1, "", "PCA"], [14, 1, 1, "", "TSNE"], [14, 1, 1, "", "UMAP"]], "phenonaut.transforms.dimensionality_reduction.LDA": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "make_scree_plot"]], "phenonaut.transforms.dimensionality_reduction.PCA": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "save_scree_plot"]], "phenonaut.transforms.dimensionality_reduction.TSNE": [[14, 2, 1, "", "__call__"]], "phenonaut.transforms.dimensionality_reduction.UMAP": [[14, 2, 1, "", "__call__"]], "phenonaut.transforms.generic_transformations": [[14, 1, 1, "", "Log2"]], "phenonaut.transforms.imputers": [[14, 1, 1, "", "KNNImputer"], [14, 1, 1, "", "RFImputer"], [14, 1, 1, "", "SimpleImputer"]], "phenonaut.transforms.preparative": [[14, 1, 1, "", "RemoveHighestCorrelatedThenVIF"], [14, 1, 1, "", "RemoveHighlyCorrelated"], [14, 1, 1, "", "RobustMAD"], [14, 1, 1, "", "StandardScaler"], [14, 1, 1, "", "VIF"], [14, 1, 1, "", "ZCA"]], "phenonaut.transforms.preparative.RemoveHighestCorrelatedThenVIF": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "filter"]], "phenonaut.transforms.preparative.RemoveHighlyCorrelated": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "filter"]], "phenonaut.transforms.preparative.VIF": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "filter"], [14, 2, 1, "", "get_vif_scores"]], "phenonaut.transforms.supervised_transformer": [[14, 1, 1, "", "SupervisedTransformer"]], "phenonaut.transforms.supervised_transformer.SupervisedTransformer": [[14, 4, 1, "", "callable_args"], [14, 2, 1, "", "fit"], [14, 2, 1, "", "fit_transform"], [14, 4, 1, "", "has_fit"], [14, 4, 1, "", "has_fit_transform"], [14, 4, 1, "", "has_transform"], [14, 4, 1, "", "is_callable"], [14, 4, 1, "", "method"], [14, 4, 1, "", "method_kwargs"], [14, 4, 1, "", "new_feature_names"], [14, 2, 1, "", "transform"]], "phenonaut.transforms.transformer": [[14, 6, 1, "", "PheTransformerFitQueryMatchedNoRows"], [14, 1, 1, "", "Transformer"]], "phenonaut.transforms.transformer.Transformer": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "fit"], [14, 2, 1, "", "fit_transform"], [14, 2, 1, "", "transform"]], "phenonaut.utils": [[2, 5, 1, "", "check_path"], [2, 5, 1, "", "load_dict"]], "phenonaut.workflow": [[2, 1, 1, "", "Workflow"], [2, 5, 1, "", "predict"]], "phenonaut.workflow.Workflow": [[2, 2, 1, "", "VIF_filter_features"], [2, 2, 1, "", "add_well_id"], [2, 2, 1, "", "cityblock_distance"], [2, 2, 1, "", "copy_column"], [2, 2, 1, "", "euclidean_distance"], [2, 2, 1, "", "filter_columns"], [2, 2, 1, "", "filter_correlated_and_VIF_features"], [2, 2, 1, "", "filter_correlated_features"], [2, 2, 1, "", "filter_rows"], [2, 2, 1, "", "if_blank_also_blank"], [2, 2, 1, "", "load"], [2, 2, 1, "", "mahalanobis_distance"], [2, 2, 1, "", "manhattan_distance"], [2, 2, 1, "", "pca"], [2, 2, 1, "", "rename_column"], [2, 2, 1, "", "rename_columns"], [2, 2, 1, "", "run_workflow"], [2, 2, 1, "", "scalar_projection"], [2, 2, 1, "", "scatter"], [2, 2, 1, "", "set_perturbation_column"], [2, 2, 1, "", "tsne"], [2, 2, 1, "", "umap"], [2, 2, 1, "", "write_csv"], [2, 2, 1, "", "write_multiple_csvs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"exampl": [0, 15, 16], "2": [0, 17], "cmap": [0, 10, 15], "welcom": 1, "phenonaut": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17], "document": 1, "user": [1, 17], "guid": [1, 17], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "indic": [1, 18], "tabl": 1, "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "subpackag": [2, 4, 6, 11, 12], "submodul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "error": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "util": [2, 6], "workflow": [2, 18], "data": 3, "dataset": [3, 17, 18], "paramet": 3, "platemap_queri": 3, "recip": 3, "integr": [4, 5], "integration_control": 4, "base": [5, 10], "classic": 5, "metric": [6, 7, 8], "distanc": 6, "measur": [6, 17, 18], "non_ds_phenotypic_metr": 6, "compact": 7, "pr": 7, "distinct": 8, "distinctness_measur": 8, "output": [9, 17], "boxplot": 9, "heatmap": 9, "pair_plot": 9, "pptx": 9, "scatter": [9, 18], "spreadsheet": 9, "visualisation_bas": 9, "packaged_dataset": 10, "breast_canc": 10, "iri": 10, "linc": 10, "metadata_moa": 10, "tcga": [10, 15, 16], "predict": [11, 12, 13, 18], "optuna_funct": 11, "predict_util": 11, "predictor_dataclass": 11, "profil": 11, "default_predictor": [12, 13], "classifi": 12, "multiregressor": 12, "regressor": 12, "pytorch_model": 13, "dave": 13, "multiregressor_nn": 13, "transform": [14, 17, 18], "dimensionality_reduct": 14, "generic_transform": 14, "imput": 14, "prepar": 14, "supervised_transform": 14, "public": 15, "1": 16, "code": 16, "list": 16, "python": 16, "yaml": 16, "class": 17, "contain": 17, "one": 17, "featur": 17, "per": 17, "row": 17, "drug": 17, "seq": 17, "sampl": 17, "well": 17, "4": 17, "ideal": 17, "count": 17, "3": 17, "remov": 17, "highli": 17, "correl": 17, "appli": [17, 18], "umap": [17, 18], "plot": [17, 18], "result": 17, "mode": 18, "i": 18, "o": 18, "load": 18, "avail": 18, "case": 18, "insensit": 18, "file": 18, "format": 18, "can": 18, "ext": 18, "gz": 18, "gzip": 18, "compress": 18, "write_csv": 18, "write_multiple_csv": 18, "add_well_id": 18, "copy_column": 18, "rename_column": 18, "filter": 18, "filter_column": 18, "filter_row": 18, "filter_correlated_featur": 18, "vif_filter_featur": 18, "filter_correlated_and_vif_featur": 18, "if_blank_also_blank": 18, "dimension": 18, "reduct": 18, "pca": 18, "tnse": 18, "scalar": 18, "project": 18, "euclidean_dist": 18, "manhattan_dist": 18, "cityblock_dist": 18, "mahalanobis_dist": 18, "set_perturbation_column": 18}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Example 2 - CMAP": [[0, "example-2-cmap"]], "Welcome to the Phenonaut documentation!": [[1, "welcome-to-the-phenonaut-documentation"]], "User guide": [[1, "user-guide"], [17, "user-guide"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "phenonaut package": [[2, "phenonaut-package"]], "Subpackages": [[2, "subpackages"], [4, "subpackages"], [6, "subpackages"], [11, "subpackages"], [12, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"]], "phenonaut.errors module": [[2, "module-phenonaut.errors"]], "phenonaut.phenonaut module": [[2, "module-phenonaut.phenonaut"]], "phenonaut.utils module": [[2, "module-phenonaut.utils"]], "phenonaut.workflow module": [[2, "module-phenonaut.workflow"]], "Module contents": [[2, "module-phenonaut"], [3, "module-phenonaut.data"], [4, "module-phenonaut.integration"], [5, "module-phenonaut.integration.integrators"], [6, "module-phenonaut.metrics"], [7, "module-phenonaut.metrics.compactness"], [8, "module-phenonaut.metrics.distinctness"], [9, "module-phenonaut.output"], [10, "module-phenonaut.packaged_datasets"], [11, "module-phenonaut.predict"], [12, "module-phenonaut.predict.default_predictors"], [13, "module-phenonaut.predict.default_predictors.pytorch_models"], [14, "module-phenonaut.transforms"]], "phenonaut.data package": [[3, "phenonaut-data-package"]], "phenonaut.data.dataset module": [[3, "module-phenonaut.data.dataset"]], "Parameters:": [[3, "parameters"], [3, "id1"]], "phenonaut.data.platemap_querier module": [[3, "module-phenonaut.data.platemap_querier"]], "phenonaut.data.recipes module": [[3, "module-phenonaut.data.recipes"]], "phenonaut.integration package": [[4, "phenonaut-integration-package"]], "phenonaut.integration.integration_control module": [[4, "phenonaut-integration-integration-control-module"]], "phenonaut.integration.integrators package": [[5, "phenonaut-integration-integrators-package"]], "phenonaut.integration.integrators.base module": [[5, "module-phenonaut.integration.integrators.base"]], "phenonaut.integration.integrators.classic module": [[5, "module-phenonaut.integration.integrators.classic"]], "phenonaut.metrics package": [[6, "phenonaut-metrics-package"]], "phenonaut.metrics.distances module": [[6, "module-phenonaut.metrics.distances"]], "phenonaut.metrics.measures module": [[6, "module-phenonaut.metrics.measures"]], "phenonaut.metrics.non_ds_phenotypic_metrics module": [[6, "module-phenonaut.metrics.non_ds_phenotypic_metrics"]], "phenonaut.metrics.utils module": [[6, "module-phenonaut.metrics.utils"]], "phenonaut.metrics.compactness package": [[7, "phenonaut-metrics-compactness-package"]], "phenonaut.metrics.compactness.pr module": [[7, "module-phenonaut.metrics.compactness.pr"]], "phenonaut.metrics.distinctness package": [[8, "phenonaut-metrics-distinctness-package"]], "phenonaut.metrics.distinctness.distinctness_measures module": [[8, "module-phenonaut.metrics.distinctness.distinctness_measures"]], "phenonaut.output package": [[9, "phenonaut-output-package"]], "phenonaut.output.boxplot module": [[9, "module-phenonaut.output.boxplot"]], "phenonaut.output.heatmap module": [[9, "module-phenonaut.output.heatmap"]], "phenonaut.output.pair_plot module": [[9, "module-phenonaut.output.pair_plot"]], "phenonaut.output.pptx module": [[9, "module-phenonaut.output.pptx"]], "phenonaut.output.scatter module": [[9, "module-phenonaut.output.scatter"]], "phenonaut.output.spreadsheet module": [[9, "module-phenonaut.output.spreadsheet"]], "phenonaut.output.visualisation_base module": [[9, "module-phenonaut.output.visualisation_base"]], "phenonaut.packaged_datasets package": [[10, "phenonaut-packaged-datasets-package"]], "phenonaut.packaged_datasets.base module": [[10, "module-phenonaut.packaged_datasets.base"]], "phenonaut.packaged_datasets.breast_cancer module": [[10, "module-phenonaut.packaged_datasets.breast_cancer"]], "phenonaut.packaged_datasets.cmap module": [[10, "module-phenonaut.packaged_datasets.cmap"]], "phenonaut.packaged_datasets.iris module": [[10, "module-phenonaut.packaged_datasets.iris"]], "phenonaut.packaged_datasets.lincs module": [[10, "module-phenonaut.packaged_datasets.lincs"]], "phenonaut.packaged_datasets.metadata_moa module": [[10, "module-phenonaut.packaged_datasets.metadata_moa"]], "phenonaut.packaged_datasets.tcga module": [[10, "module-phenonaut.packaged_datasets.tcga"]], "phenonaut.predict package": [[11, "phenonaut-predict-package"]], "phenonaut.predict.optuna_functions module": [[11, "module-phenonaut.predict.optuna_functions"]], "phenonaut.predict.predict_utils module": [[11, "module-phenonaut.predict.predict_utils"]], "phenonaut.predict.predictor_dataclasses module": [[11, "module-phenonaut.predict.predictor_dataclasses"]], "phenonaut.predict.profile module": [[11, "module-phenonaut.predict.profile"]], "phenonaut.predict.default_predictors package": [[12, "phenonaut-predict-default-predictors-package"]], "phenonaut.predict.default_predictors.classifiers module": [[12, "module-phenonaut.predict.default_predictors.classifiers"]], "phenonaut.predict.default_predictors.multiregressors module": [[12, "module-phenonaut.predict.default_predictors.multiregressors"]], "phenonaut.predict.default_predictors.regressors module": [[12, "module-phenonaut.predict.default_predictors.regressors"]], "phenonaut.predict.default_predictors.pytorch_models package": [[13, "phenonaut-predict-default-predictors-pytorch-models-package"]], "phenonaut.predict.default_predictors.pytorch_models.dave module": [[13, "module-phenonaut.predict.default_predictors.pytorch_models.dave"]], "phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn module": [[13, "module-phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn"]], "phenonaut.transforms package": [[14, "phenonaut-transforms-package"]], "phenonaut.transforms.dimensionality_reduction module": [[14, "module-phenonaut.transforms.dimensionality_reduction"]], "phenonaut.transforms.generic_transformations module": [[14, "module-phenonaut.transforms.generic_transformations"]], "phenonaut.transforms.imputers module": [[14, "module-phenonaut.transforms.imputers"]], "phenonaut.transforms.preparative module": [[14, "module-phenonaut.transforms.preparative"]], "phenonaut.transforms.supervised_transformer module": [[14, "module-phenonaut.transforms.supervised_transformer"]], "phenonaut.transforms.transformer module": [[14, "module-phenonaut.transforms.transformer"]], "Publication examples": [[15, "publication-examples"]], "TCGA Example": [[15, "tcga-example"]], "CMAP Example": [[15, "cmap-example"]], "Example 1 - TCGA": [[16, "example-1-tcga"]], "Code listing": [[16, "code-listing"]], "Python": [[16, "python"]], "YAML": [[16, "yaml"]], "Phenonaut": [[17, "phenonaut"]], "Phenonaut class": [[17, "phenonaut-class"]], "Datasets class": [[17, "datasets-class"]], "Datasets containing one feature per-row": [[17, "datasets-containing-one-feature-per-row"]], "DRUG-seq sample output, 2 measurements per well, for 4 wells.": [[17, "id3"]], "Ideal, transformed DRUG-seq sample output, 2 counts measurements per well, for 3 wells.": [[17, "id4"]], "Packaged datasets": [[17, "packaged-datasets"]], "Removing highly correlated features": [[17, "removing-highly-correlated-features"]], "Applying UMAP": [[17, "applying-umap"]], "Plotting the results": [[17, "plotting-the-results"]], "Workflow mode": [[18, "workflow-mode"]], "I/O": [[18, "i-o"]], "load": [[18, "load"]], "Available packaged datasets (case insensitive)": [[18, "id1"]], "Workflow file formats (* can be <ext>.gz indicating gzip compression is applied)": [[18, "id2"]], "write_csv": [[18, "write-csv"]], "write_multiple_csvs": [[18, "write-multiple-csvs"]], "Transforms": [[18, "transforms"]], "add_well_id": [[18, "add-well-id"]], "copy_column": [[18, "copy-column"]], "rename_column and rename_columns": [[18, "rename-column-and-rename-columns"]], "Filtering": [[18, "filtering"]], "filter_columns": [[18, "filter-columns"]], "filter_rows": [[18, "filter-rows"]], "filter_correlated_features": [[18, "filter-correlated-features"]], "VIF_filter_features": [[18, "vif-filter-features"]], "filter_correlated_and_VIF_features": [[18, "filter-correlated-and-vif-features"]], "if_blank_also_blank": [[18, "if-blank-also-blank"]], "Dimensionality reduction": [[18, "dimensionality-reduction"]], "pca": [[18, "pca"]], "tnse": [[18, "tnse"]], "umap": [[18, "umap"]], "Measurements": [[18, "measurements"]], "scalar projection": [[18, "scalar-projection"]], "euclidean_distance": [[18, "euclidean-distance"]], "manhattan_distance": [[18, "manhattan-distance"]], "cityblock_distance": [[18, "cityblock-distance"]], "mahalanobis_distance": [[18, "mahalanobis-distance"]], "Plotting": [[18, "plotting"]], "set_perturbation_column": [[18, "set-perturbation-column"]], "scatter": [[18, "scatter"]], "Prediction": [[18, "prediction"]], "predict": [[18, "predict"]]}, "indexentries": {"notenoughrowserror": [[2, "phenonaut.errors.NotEnoughRowsError"]], "phenonaut (class in phenonaut)": [[2, "phenonaut.Phenonaut"]], "phenonaut (class in phenonaut.phenonaut)": [[2, "phenonaut.phenonaut.Phenonaut"]], "platemapquerier (class in phenonaut)": [[2, "phenonaut.PlatemapQuerier"]], "vif_filter_features() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.VIF_filter_features"]], "workflow (class in phenonaut.workflow)": [[2, "phenonaut.workflow.Workflow"]], "add_well_id() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.add_well_id"]], "add_well_id() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.add_well_id"]], "add_well_id() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.add_well_id"]], "aggregate_dataset() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.aggregate_dataset"]], "aggregate_dataset() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.aggregate_dataset"]], "append() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.append"]], "append() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.append"]], "check_path() (in module phenonaut.utils)": [[2, "phenonaut.utils.check_path"]], "cityblock_distance() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.cityblock_distance"]], "clone_dataset() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.clone_dataset"]], "clone_dataset() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.clone_dataset"]], "combine_datasets() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.combine_datasets"]], "combine_datasets() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.combine_datasets"]], "copy_column() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.copy_column"]], "data (phenonaut.phenonaut property)": [[2, "phenonaut.Phenonaut.data"]], "data (phenonaut.phenonaut.phenonaut property)": [[2, "phenonaut.phenonaut.Phenonaut.data"]], "dataset_intersection() (in module phenonaut)": [[2, "phenonaut.dataset_intersection"]], "describe() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.describe"]], "describe() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.describe"]], "df (phenonaut.phenonaut property)": [[2, "phenonaut.Phenonaut.df"]], "df (phenonaut.phenonaut.phenonaut property)": [[2, "phenonaut.phenonaut.Phenonaut.df"]], "ds (phenonaut.phenonaut property)": [[2, "phenonaut.Phenonaut.ds"]], "ds (phenonaut.phenonaut.phenonaut property)": [[2, "phenonaut.phenonaut.Phenonaut.ds"]], "euclidean_distance() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.euclidean_distance"]], "filter_columns() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.filter_columns"]], "filter_correlated_and_vif_features() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.filter_correlated_and_VIF_features"]], "filter_correlated_features() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.filter_correlated_features"]], "filter_datasets_on_identifiers() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.filter_datasets_on_identifiers"]], "filter_datasets_on_identifiers() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.filter_datasets_on_identifiers"]], "filter_rows() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.filter_rows"]], "get_compound_locations() (phenonaut.platemapquerier method)": [[2, "phenonaut.PlatemapQuerier.get_compound_locations"]], "get_dataset_combinations() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.get_dataset_combinations"]], "get_dataset_combinations() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.get_dataset_combinations"]], "get_dataset_index_from_name() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.get_dataset_index_from_name"]], "get_dataset_index_from_name() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.get_dataset_index_from_name"]], "get_dataset_names() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.get_dataset_names"]], "get_dataset_names() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.get_dataset_names"]], "get_df_features_perturbation_column() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.get_df_features_perturbation_column"]], "get_df_features_perturbation_column() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.get_df_features_perturbation_column"]], "get_hash_dictionary() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.get_hash_dictionary"]], "get_hash_dictionary() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.get_hash_dictionary"]], "groupby_datasets() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.groupby_datasets"]], "groupby_datasets() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.groupby_datasets"]], "if_blank_also_blank() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.if_blank_also_blank"]], "keys() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.keys"]], "keys() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.keys"]], "load() (in module phenonaut)": [[2, "phenonaut.load"]], "load() (in module phenonaut.phenonaut)": [[2, "phenonaut.phenonaut.load"]], "load() (phenonaut.phenonaut class method)": [[2, "phenonaut.Phenonaut.load"]], "load() (phenonaut.phenonaut.phenonaut class method)": [[2, "phenonaut.phenonaut.Phenonaut.load"]], "load() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.load"]], "load_dataset() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.load_dataset"]], "load_dataset() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.load_dataset"]], "load_dict() (in module phenonaut.utils)": [[2, "phenonaut.utils.load_dict"]], "mahalanobis_distance() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.mahalanobis_distance"]], "manhattan_distance() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.manhattan_distance"]], "match_perturbation_columns() (in module phenonaut)": [[2, "phenonaut.match_perturbation_columns"]], "match_perturbation_columns() (in module phenonaut.phenonaut)": [[2, "phenonaut.phenonaut.match_perturbation_columns"]], "merge_datasets() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.merge_datasets"]], "merge_datasets() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.merge_datasets"]], "module": [[2, "module-phenonaut"], [2, "module-phenonaut.errors"], [2, "module-phenonaut.phenonaut"], [2, "module-phenonaut.utils"], [2, "module-phenonaut.workflow"], [3, "module-phenonaut.data"], [3, "module-phenonaut.data.dataset"], [3, "module-phenonaut.data.platemap_querier"], [3, "module-phenonaut.data.recipes"], [4, "module-phenonaut.integration"], [5, "module-phenonaut.integration.integrators"], [5, "module-phenonaut.integration.integrators.base"], [5, "module-phenonaut.integration.integrators.classic"], [6, "module-phenonaut.metrics"], [6, "module-phenonaut.metrics.distances"], [6, "module-phenonaut.metrics.measures"], [6, "module-phenonaut.metrics.non_ds_phenotypic_metrics"], [6, "module-phenonaut.metrics.utils"], [7, "module-phenonaut.metrics.compactness"], [7, "module-phenonaut.metrics.compactness.pr"], [8, "module-phenonaut.metrics.distinctness"], [8, "module-phenonaut.metrics.distinctness.distinctness_measures"], [9, "module-phenonaut.output"], [9, "module-phenonaut.output.boxplot"], [9, "module-phenonaut.output.heatmap"], [9, "module-phenonaut.output.pair_plot"], [9, "module-phenonaut.output.pptx"], [9, "module-phenonaut.output.scatter"], [9, "module-phenonaut.output.spreadsheet"], [9, "module-phenonaut.output.visualisation_base"], [10, "module-phenonaut.packaged_datasets"], [10, "module-phenonaut.packaged_datasets.base"], [10, "module-phenonaut.packaged_datasets.breast_cancer"], [10, "module-phenonaut.packaged_datasets.cmap"], [10, "module-phenonaut.packaged_datasets.iris"], [10, "module-phenonaut.packaged_datasets.lincs"], [10, "module-phenonaut.packaged_datasets.metadata_moa"], [10, "module-phenonaut.packaged_datasets.tcga"], [11, "module-phenonaut.predict"], [11, "module-phenonaut.predict.optuna_functions"], [11, "module-phenonaut.predict.predict_utils"], [11, "module-phenonaut.predict.predictor_dataclasses"], [11, "module-phenonaut.predict.profile"], [12, "module-phenonaut.predict.default_predictors"], [12, "module-phenonaut.predict.default_predictors.classifiers"], [12, "module-phenonaut.predict.default_predictors.multiregressors"], [12, "module-phenonaut.predict.default_predictors.regressors"], [13, "module-phenonaut.predict.default_predictors.pytorch_models"], [13, "module-phenonaut.predict.default_predictors.pytorch_models.dave"], [13, "module-phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn"], [14, "module-phenonaut.transforms"], [14, "module-phenonaut.transforms.dimensionality_reduction"], [14, "module-phenonaut.transforms.generic_transformations"], [14, "module-phenonaut.transforms.imputers"], [14, "module-phenonaut.transforms.preparative"], [14, "module-phenonaut.transforms.supervised_transformer"], [14, "module-phenonaut.transforms.transformer"]], "new_dataset_from_query() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.new_dataset_from_query"]], "new_dataset_from_query() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.new_dataset_from_query"]], "pca() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.pca"]], "phenonaut": [[2, "module-phenonaut"]], "phenonaut.errors": [[2, "module-phenonaut.errors"]], "phenonaut.phenonaut": [[2, "module-phenonaut.phenonaut"]], "phenonaut.utils": [[2, "module-phenonaut.utils"]], "phenonaut.workflow": [[2, "module-phenonaut.workflow"]], "plate_to_cpd_to_well_dict (phenonaut.platemapquerier attribute)": [[2, "phenonaut.PlatemapQuerier.plate_to_cpd_to_well_dict"]], "platemap_files (phenonaut.platemapquerier attribute)": [[2, "phenonaut.PlatemapQuerier.platemap_files"]], "predict() (in module phenonaut.workflow)": [[2, "phenonaut.workflow.predict"]], "rename_column() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.rename_column"]], "rename_columns() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.rename_columns"]], "revert() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.revert"]], "revert() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.revert"]], "run_workflow() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.run_workflow"]], "save() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.save"]], "save() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.save"]], "scalar_projection() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.scalar_projection"]], "scatter() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.scatter"]], "set_perturbation_column() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.set_perturbation_column"]], "shrink() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.shrink"]], "shrink() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.shrink"]], "subtract_median_perturbation() (phenonaut.phenonaut method)": [[2, "phenonaut.Phenonaut.subtract_median_perturbation"]], "subtract_median_perturbation() (phenonaut.phenonaut.phenonaut method)": [[2, "phenonaut.phenonaut.Phenonaut.subtract_median_perturbation"]], "tsne() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.tsne"]], "umap() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.umap"]], "write_csv() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.write_csv"]], "write_multiple_csvs() (phenonaut.workflow.workflow method)": [[2, "phenonaut.workflow.Workflow.write_multiple_csvs"]], "dataset (class in phenonaut.data.dataset)": [[3, "phenonaut.data.dataset.Dataset"]], "platemapquerier (class in phenonaut.data.platemap_querier)": [[3, "phenonaut.data.platemap_querier.PlatemapQuerier"]], "transformationhistory (class in phenonaut.data.dataset)": [[3, "phenonaut.data.dataset.TransformationHistory"]], "add_well_id() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.add_well_id"]], "copy() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.copy"]], "data (phenonaut.data.dataset.dataset property)": [[3, "phenonaut.data.dataset.Dataset.data"]], "description (phenonaut.data.dataset.transformationhistory attribute)": [[3, "phenonaut.data.dataset.TransformationHistory.description"]], "df_to_csv() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.df_to_csv"]], "df_to_multiple_csvs() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.df_to_multiple_csvs"]], "distance_df() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.distance_df"]], "divide_mean() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.divide_mean"]], "divide_median() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.divide_median"]], "drop_absent_features() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.drop_absent_features"]], "drop_columns() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.drop_columns"]], "drop_nans_with_cutoff() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.drop_nans_with_cutoff"]], "drop_rows() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.drop_rows"]], "features (phenonaut.data.dataset.dataset property)": [[3, "phenonaut.data.dataset.Dataset.features"]], "features (phenonaut.data.dataset.transformationhistory attribute)": [[3, "phenonaut.data.dataset.TransformationHistory.features"]], "filter_columns() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.filter_columns"]], "filter_columns_with_prefix() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.filter_columns_with_prefix"]], "filter_inplace() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.filter_inplace"]], "filter_on_identifiers() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.filter_on_identifiers"]], "filter_rows() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.filter_rows"]], "get_compound_locations() (phenonaut.data.platemap_querier.platemapquerier method)": [[3, "phenonaut.data.platemap_querier.PlatemapQuerier.get_compound_locations"]], "get_df_features_perturbation_column() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.get_df_features_perturbation_column"]], "get_ds_from_query() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.get_ds_from_query"]], "get_feature_ranges() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.get_feature_ranges"]], "get_history() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.get_history"]], "get_non_feature_columns() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.get_non_feature_columns"]], "get_unique_perturbations() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.get_unique_perturbations"]], "get_unique_treatments() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.get_unique_treatments"]], "groupby() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.groupby"]], "history (phenonaut.data.dataset.dataset property)": [[3, "phenonaut.data.dataset.Dataset.history"]], "impute_nans() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.impute_nans"]], "new_aggregated_dataset() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.new_aggregated_dataset"]], "num_features (phenonaut.data.dataset.dataset property)": [[3, "phenonaut.data.dataset.Dataset.num_features"]], "pcol (phenonaut.data.dataset.dataset property)": [[3, "phenonaut.data.dataset.Dataset.pcol"]], "perturbation_column (phenonaut.data.dataset.dataset property)": [[3, "phenonaut.data.dataset.Dataset.perturbation_column"]], "phenonaut.data": [[3, "module-phenonaut.data"]], "phenonaut.data.dataset": [[3, "module-phenonaut.data.dataset"]], "phenonaut.data.platemap_querier": [[3, "module-phenonaut.data.platemap_querier"]], "phenonaut.data.recipes": [[3, "module-phenonaut.data.recipes"]], "pivot() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.pivot"]], "plate_to_cpd_to_well_dict (phenonaut.data.platemap_querier.platemapquerier attribute)": [[3, "phenonaut.data.platemap_querier.PlatemapQuerier.plate_to_cpd_to_well_dict"]], "platemap_files (phenonaut.data.platemap_querier.platemapquerier attribute)": [[3, "phenonaut.data.platemap_querier.PlatemapQuerier.platemap_files"]], "remove_blocklist_features() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.remove_blocklist_features"]], "remove_features_with_outliers() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.remove_features_with_outliers"]], "remove_low_variance_features() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.remove_low_variance_features"]], "rename_column() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.rename_column"]], "rename_columns() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.rename_columns"]], "replace_str() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.replace_str"]], "shrink() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.shrink"]], "split_column() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.split_column"]], "subtract_func_results_on_features() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.subtract_func_results_on_features"]], "subtract_mean() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.subtract_mean"]], "subtract_median() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.subtract_median"]], "subtract_median_perturbation() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.subtract_median_perturbation"]], "transpose() (phenonaut.data.dataset.dataset method)": [[3, "phenonaut.data.dataset.Dataset.transpose"]], "concatenate_datasets_horizontally() (in module phenonaut.integration)": [[4, "phenonaut.integration.concatenate_datasets_horizontally"]], "phenonaut.integration": [[4, "module-phenonaut.integration"]], "concatenate_viewintegrator (class in phenonaut.integration.integrators)": [[5, "phenonaut.integration.integrators.Concatenate_ViewIntegrator"]], "concatenate_viewintegrator (class in phenonaut.integration.integrators.classic)": [[5, "phenonaut.integration.integrators.classic.Concatenate_ViewIntegrator"]], "mvmds_viewintegrator (class in phenonaut.integration.integrators)": [[5, "phenonaut.integration.integrators.MVMDS_ViewIntegrator"]], "mvmds_viewintegrator (class in phenonaut.integration.integrators.classic)": [[5, "phenonaut.integration.integrators.classic.MVMDS_ViewIntegrator"]], "splitautoencoder_viewintegrator (class in phenonaut.integration.integrators)": [[5, "phenonaut.integration.integrators.SplitAutoencoder_ViewIntegrator"]], "splitautoencoder_viewintegrator (class in phenonaut.integration.integrators.classic)": [[5, "phenonaut.integration.integrators.classic.SplitAutoencoder_ViewIntegrator"]], "viewintegrator (class in phenonaut.integration.integrators.base)": [[5, "phenonaut.integration.integrators.base.ViewIntegrator"]], "__call__() (phenonaut.integration.integrators.concatenate_viewintegrator method)": [[5, "phenonaut.integration.integrators.Concatenate_ViewIntegrator.__call__"]], "__call__() (phenonaut.integration.integrators.mvmds_viewintegrator method)": [[5, "phenonaut.integration.integrators.MVMDS_ViewIntegrator.__call__"]], "__call__() (phenonaut.integration.integrators.splitautoencoder_viewintegrator method)": [[5, "phenonaut.integration.integrators.SplitAutoencoder_ViewIntegrator.__call__"]], "__call__() (phenonaut.integration.integrators.classic.concatenate_viewintegrator method)": [[5, "phenonaut.integration.integrators.classic.Concatenate_ViewIntegrator.__call__"]], "__call__() (phenonaut.integration.integrators.classic.mvmds_viewintegrator method)": [[5, "phenonaut.integration.integrators.classic.MVMDS_ViewIntegrator.__call__"]], "__call__() (phenonaut.integration.integrators.classic.splitautoencoder_viewintegrator method)": [[5, "phenonaut.integration.integrators.classic.SplitAutoencoder_ViewIntegrator.__call__"]], "fit() (phenonaut.integration.integrators.base.viewintegrator method)": [[5, "phenonaut.integration.integrators.base.ViewIntegrator.fit"]], "fit_train_test_transform_test() (phenonaut.integration.integrators.base.viewintegrator method)": [[5, "phenonaut.integration.integrators.base.ViewIntegrator.fit_train_test_transform_test"]], "fit_transform() (phenonaut.integration.integrators.base.viewintegrator method)": [[5, "phenonaut.integration.integrators.base.ViewIntegrator.fit_transform"]], "merge_splits_to_single_views() (phenonaut.integration.integrators.base.viewintegrator static method)": [[5, "phenonaut.integration.integrators.base.ViewIntegrator.merge_splits_to_single_views"]], "multiplex_df() (phenonaut.integration.integrators.base.viewintegrator static method)": [[5, "phenonaut.integration.integrators.base.ViewIntegrator.multiplex_df"]], "multiplex_df_merge_single_samples() (phenonaut.integration.integrators.base.viewintegrator static method)": [[5, "phenonaut.integration.integrators.base.ViewIntegrator.multiplex_df_merge_single_samples"]], "phenonaut.integration.integrators": [[5, "module-phenonaut.integration.integrators"]], "phenonaut.integration.integrators.base": [[5, "module-phenonaut.integration.integrators.base"]], "phenonaut.integration.integrators.classic": [[5, "module-phenonaut.integration.integrators.classic"]], "transform() (phenonaut.integration.integrators.base.viewintegrator method)": [[5, "phenonaut.integration.integrators.base.ViewIntegrator.transform"]], "phenotypicmetric (class in phenonaut.metrics.non_ds_phenotypic_metrics)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.PhenotypicMetric"]], "__call__() (phenonaut.metrics.non_ds_phenotypic_metrics.phenotypicmetric method)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.PhenotypicMetric.__call__"]], "auroc() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.auroc"]], "calc_connectivity_scores() (in module phenonaut.metrics.non_ds_phenotypic_metrics)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.calc_connectivity_scores"]], "calc_spearmansrank_scores() (in module phenonaut.metrics.non_ds_phenotypic_metrics)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.calc_spearmansrank_scores"]], "calc_zhang_scores() (in module phenonaut.metrics.non_ds_phenotypic_metrics)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.calc_zhang_scores"]], "calc_zhang_scores_all_v_all() (in module phenonaut.metrics.non_ds_phenotypic_metrics)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.calc_zhang_scores_all_v_all"]], "distance() (phenonaut.metrics.non_ds_phenotypic_metrics.phenotypicmetric method)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.PhenotypicMetric.distance"]], "euclidean() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.euclidean"]], "euclidean() (in module phenonaut.metrics.distances)": [[6, "phenonaut.metrics.distances.euclidean"]], "feature_correlation_to_target() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.feature_correlation_to_target"]], "feature_correlation_to_target() (in module phenonaut.metrics.measures)": [[6, "phenonaut.metrics.measures.feature_correlation_to_target"]], "get_cdu_performance_df() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.get_cdu_performance_df"]], "mahalanobis() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.mahalanobis"]], "mahalanobis() (in module phenonaut.metrics.distances)": [[6, "phenonaut.metrics.distances.mahalanobis"]], "manhattan() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.manhattan"]], "manhattan() (in module phenonaut.metrics.distances)": [[6, "phenonaut.metrics.distances.manhattan"]], "mp_value_score() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.mp_value_score"]], "percent_compact() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.percent_compact"]], "percent_compact_summarise_results() (in module phenonaut.metrics.utils)": [[6, "phenonaut.metrics.utils.percent_compact_summarise_results"]], "percent_replicating() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.percent_replicating"]], "percent_replicating_results_dataframe_to_95pct_confidence_interval() (in module phenonaut.metrics.utils)": [[6, "phenonaut.metrics.utils.percent_replicating_results_dataframe_to_95pct_confidence_interval"]], "percent_replicating_results_dataframe_to_percentile_vs_percent_replicating() (in module phenonaut.metrics.utils)": [[6, "phenonaut.metrics.utils.percent_replicating_results_dataframe_to_percentile_vs_percent_replicating"]], "percent_replicating_summarise_results() (in module phenonaut.metrics.utils)": [[6, "phenonaut.metrics.utils.percent_replicating_summarise_results"]], "pertmutation_test_distinct_from_query_group() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.pertmutation_test_distinct_from_query_group"]], "pertmutation_test_type2_distinct_from_query_group() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.pertmutation_test_type2_distinct_from_query_group"]], "phenonaut.metrics": [[6, "module-phenonaut.metrics"]], "phenonaut.metrics.distances": [[6, "module-phenonaut.metrics.distances"]], "phenonaut.metrics.measures": [[6, "module-phenonaut.metrics.measures"]], "phenonaut.metrics.non_ds_phenotypic_metrics": [[6, "module-phenonaut.metrics.non_ds_phenotypic_metrics"]], "phenonaut.metrics.utils": [[6, "module-phenonaut.metrics.utils"]], "run_cdu_benchmarks() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.run_cdu_benchmarks"]], "scalar_projection() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.scalar_projection"]], "scalar_projection() (in module phenonaut.metrics.measures)": [[6, "phenonaut.metrics.measures.scalar_projection"]], "scale() (phenonaut.metrics.non_ds_phenotypic_metrics.phenotypicmetric method)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.PhenotypicMetric.scale"]], "silhouette_score() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.silhouette_score"]], "similarity() (phenonaut.metrics.non_ds_phenotypic_metrics.phenotypicmetric method)": [[6, "phenonaut.metrics.non_ds_phenotypic_metrics.PhenotypicMetric.similarity"]], "treatment_spread_euclidean() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.treatment_spread_euclidean"]], "treatment_spread_euclidean() (in module phenonaut.metrics.distances)": [[6, "phenonaut.metrics.distances.treatment_spread_euclidean"]], "write_cdu_json() (in module phenonaut.metrics)": [[6, "phenonaut.metrics.write_cdu_json"]], "percent_compact() (in module phenonaut.metrics.compactness)": [[7, "phenonaut.metrics.compactness.percent_compact"]], "percent_compact() (in module phenonaut.metrics.compactness.pr)": [[7, "phenonaut.metrics.compactness.pr.percent_compact"]], "percent_replicating() (in module phenonaut.metrics.compactness)": [[7, "phenonaut.metrics.compactness.percent_replicating"]], "percent_replicating() (in module phenonaut.metrics.compactness.pr)": [[7, "phenonaut.metrics.compactness.pr.percent_replicating"]], "phenonaut.metrics.compactness": [[7, "module-phenonaut.metrics.compactness"]], "phenonaut.metrics.compactness.pr": [[7, "module-phenonaut.metrics.compactness.pr"]], "mp_value_score() (in module phenonaut.metrics.distinctness)": [[8, "phenonaut.metrics.distinctness.mp_value_score"]], "mp_value_score() (in module phenonaut.metrics.distinctness.distinctness_measures)": [[8, "phenonaut.metrics.distinctness.distinctness_measures.mp_value_score"]], "pertmutation_test_distinct_from_query_group() (in module phenonaut.metrics.distinctness)": [[8, "phenonaut.metrics.distinctness.pertmutation_test_distinct_from_query_group"]], "phenonaut.metrics.distinctness": [[8, "module-phenonaut.metrics.distinctness"]], "phenonaut.metrics.distinctness.distinctness_measures": [[8, "module-phenonaut.metrics.distinctness.distinctness_measures"]], "silhouette_score() (in module phenonaut.metrics.distinctness)": [[8, "phenonaut.metrics.distinctness.silhouette_score"]], "silhouette_score() (in module phenonaut.metrics.distinctness.distinctness_measures)": [[8, "phenonaut.metrics.distinctness.distinctness_measures.silhouette_score"]], "phenonautpptx (class in phenonaut.output.pptx)": [[9, "phenonaut.output.pptx.PhenonautPPTX"]], "phenonautvisualisation (class in phenonaut.output.visualisation_base)": [[9, "phenonaut.output.visualisation_base.PhenonautVisualisation"]], "scatter (class in phenonaut.output.scatter)": [[9, "phenonaut.output.scatter.Scatter"]], "add() (phenonaut.output.scatter.scatter method)": [[9, "phenonaut.output.scatter.Scatter.add"]], "add_image_slide() (phenonaut.output.pptx.phenonautpptx method)": [[9, "phenonaut.output.pptx.PhenonautPPTX.add_image_slide"]], "phenonaut.output": [[9, "module-phenonaut.output"]], "phenonaut.output.boxplot": [[9, "module-phenonaut.output.boxplot"]], "phenonaut.output.heatmap": [[9, "module-phenonaut.output.heatmap"]], "phenonaut.output.pair_plot": [[9, "module-phenonaut.output.pair_plot"]], "phenonaut.output.pptx": [[9, "module-phenonaut.output.pptx"]], "phenonaut.output.scatter": [[9, "module-phenonaut.output.scatter"]], "phenonaut.output.spreadsheet": [[9, "module-phenonaut.output.spreadsheet"]], "phenonaut.output.visualisation_base": [[9, "module-phenonaut.output.visualisation_base"]], "save() (phenonaut.output.pptx.phenonautpptx method)": [[9, "phenonaut.output.pptx.PhenonautPPTX.save"]], "save_figure() (phenonaut.output.scatter.scatter method)": [[9, "phenonaut.output.scatter.Scatter.save_figure"]], "show() (phenonaut.output.scatter.scatter method)": [[9, "phenonaut.output.scatter.Scatter.show"]], "show_pair_plot() (in module phenonaut.output.pair_plot)": [[9, "phenonaut.output.pair_plot.show_pair_plot"]], "write_boxplot_to_file() (in module phenonaut.output.boxplot)": [[9, "phenonaut.output.boxplot.write_boxplot_to_file"]], "write_heatmap_from_df() (in module phenonaut.output.heatmap)": [[9, "phenonaut.output.heatmap.write_heatmap_from_df"]], "write_xlsx() (in module phenonaut.output.spreadsheet)": [[9, "phenonaut.output.spreadsheet.write_xlsx"]], "breastcancer (class in phenonaut.packaged_datasets.breast_cancer)": [[10, "phenonaut.packaged_datasets.breast_cancer.BreastCancer"]], "cmap (class in phenonaut.packaged_datasets.cmap)": [[10, "phenonaut.packaged_datasets.cmap.CMAP"]], "cmap_level4 (class in phenonaut.packaged_datasets.cmap)": [[10, "phenonaut.packaged_datasets.cmap.CMAP_Level4"]], "iris (class in phenonaut.packaged_datasets.iris)": [[10, "phenonaut.packaged_datasets.iris.Iris"]], "iris_2_views (class in phenonaut.packaged_datasets.iris)": [[10, "phenonaut.packaged_datasets.iris.Iris_2_views"]], "lincs_cell_painting (class in phenonaut.packaged_datasets.lincs)": [[10, "phenonaut.packaged_datasets.lincs.LINCS_Cell_Painting"]], "metadatabroadlincscellpaintingmoas (class in phenonaut.packaged_datasets.metadata_moa)": [[10, "phenonaut.packaged_datasets.metadata_moa.MetadataBROADLincsCellPaintingMOAs"]], "metadatajumpmoacompounds (class in phenonaut.packaged_datasets.metadata_moa)": [[10, "phenonaut.packaged_datasets.metadata_moa.MetadataJUMPMOACompounds"]], "packageddataset (class in phenonaut.packaged_datasets.base)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset"]], "tcga (class in phenonaut.packaged_datasets.tcga)": [[10, "phenonaut.packaged_datasets.tcga.TCGA"]], "tcga.tcga_metadatatuple (class in phenonaut.packaged_datasets.tcga)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.TCGA_MetadataTuple"]], "__call__() (phenonaut.packaged_datasets.metadata_moa.metadatabroadlincscellpaintingmoas method)": [[10, "phenonaut.packaged_datasets.metadata_moa.MetadataBROADLincsCellPaintingMOAs.__call__"]], "__call__() (phenonaut.packaged_datasets.metadata_moa.metadatajumpmoacompounds method)": [[10, "phenonaut.packaged_datasets.metadata_moa.MetadataJUMPMOACompounds.__call__"]], "add_clinical_decision_data_to_df() (phenonaut.packaged_datasets.tcga.tcga method)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.add_clinical_decision_data_to_df"]], "df_keys() (phenonaut.packaged_datasets.base.packageddataset method)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.df_keys"]], "ds_keys() (phenonaut.packaged_datasets.base.packageddataset method)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.ds_keys"]], "files (phenonaut.packaged_datasets.tcga.tcga.tcga_metadatatuple attribute)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.TCGA_MetadataTuple.files"]], "get_df() (phenonaut.packaged_datasets.base.packageddataset method)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.get_df"]], "get_df() (phenonaut.packaged_datasets.breast_cancer.breastcancer method)": [[10, "phenonaut.packaged_datasets.breast_cancer.BreastCancer.get_df"]], "get_df() (phenonaut.packaged_datasets.cmap.cmap method)": [[10, "phenonaut.packaged_datasets.cmap.CMAP.get_df"]], "get_df() (phenonaut.packaged_datasets.cmap.cmap_level4 method)": [[10, "phenonaut.packaged_datasets.cmap.CMAP_Level4.get_df"]], "get_df() (phenonaut.packaged_datasets.iris.iris method)": [[10, "phenonaut.packaged_datasets.iris.Iris.get_df"]], "get_df() (phenonaut.packaged_datasets.iris.iris_2_views method)": [[10, "phenonaut.packaged_datasets.iris.Iris_2_views.get_df"]], "get_df() (phenonaut.packaged_datasets.lincs.lincs_cell_painting method)": [[10, "phenonaut.packaged_datasets.lincs.LINCS_Cell_Painting.get_df"]], "get_df() (phenonaut.packaged_datasets.metadata_moa.metadatabroadlincscellpaintingmoas method)": [[10, "phenonaut.packaged_datasets.metadata_moa.MetadataBROADLincsCellPaintingMOAs.get_df"]], "get_df() (phenonaut.packaged_datasets.metadata_moa.metadatajumpmoacompounds method)": [[10, "phenonaut.packaged_datasets.metadata_moa.MetadataJUMPMOACompounds.get_df"]], "get_df() (phenonaut.packaged_datasets.tcga.tcga method)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.get_df"]], "get_ds() (phenonaut.packaged_datasets.base.packageddataset method)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.get_ds"]], "get_ds() (phenonaut.packaged_datasets.breast_cancer.breastcancer method)": [[10, "phenonaut.packaged_datasets.breast_cancer.BreastCancer.get_ds"]], "get_ds() (phenonaut.packaged_datasets.cmap.cmap method)": [[10, "phenonaut.packaged_datasets.cmap.CMAP.get_ds"]], "get_ds() (phenonaut.packaged_datasets.cmap.cmap_level4 method)": [[10, "phenonaut.packaged_datasets.cmap.CMAP_Level4.get_ds"]], "get_ds() (phenonaut.packaged_datasets.iris.iris method)": [[10, "phenonaut.packaged_datasets.iris.Iris.get_ds"]], "get_ds() (phenonaut.packaged_datasets.iris.iris_2_views method)": [[10, "phenonaut.packaged_datasets.iris.Iris_2_views.get_ds"]], "get_ds() (phenonaut.packaged_datasets.lincs.lincs_cell_painting method)": [[10, "phenonaut.packaged_datasets.lincs.LINCS_Cell_Painting.get_ds"]], "get_ds() (phenonaut.packaged_datasets.metadata_moa.metadatabroadlincscellpaintingmoas method)": [[10, "phenonaut.packaged_datasets.metadata_moa.MetadataBROADLincsCellPaintingMOAs.get_ds"]], "get_ds() (phenonaut.packaged_datasets.metadata_moa.metadatajumpmoacompounds method)": [[10, "phenonaut.packaged_datasets.metadata_moa.MetadataJUMPMOACompounds.get_ds"]], "get_ds() (phenonaut.packaged_datasets.tcga.tcga method)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.get_ds"]], "header_offset (phenonaut.packaged_datasets.tcga.tcga.tcga_metadatatuple attribute)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.TCGA_MetadataTuple.header_offset"]], "keys() (phenonaut.packaged_datasets.base.packageddataset method)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.keys"]], "load_csv_kwargs (phenonaut.packaged_datasets.tcga.tcga.tcga_metadatatuple attribute)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.TCGA_MetadataTuple.load_csv_kwargs"]], "output_file_name (phenonaut.packaged_datasets.tcga.tcga.tcga_metadatatuple attribute)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.TCGA_MetadataTuple.output_file_name"]], "phenonaut.packaged_datasets": [[10, "module-phenonaut.packaged_datasets"]], "phenonaut.packaged_datasets.base": [[10, "module-phenonaut.packaged_datasets.base"]], "phenonaut.packaged_datasets.breast_cancer": [[10, "module-phenonaut.packaged_datasets.breast_cancer"]], "phenonaut.packaged_datasets.cmap": [[10, "module-phenonaut.packaged_datasets.cmap"]], "phenonaut.packaged_datasets.iris": [[10, "module-phenonaut.packaged_datasets.iris"]], "phenonaut.packaged_datasets.lincs": [[10, "module-phenonaut.packaged_datasets.lincs"]], "phenonaut.packaged_datasets.metadata_moa": [[10, "module-phenonaut.packaged_datasets.metadata_moa"]], "phenonaut.packaged_datasets.tcga": [[10, "module-phenonaut.packaged_datasets.tcga"]], "raw_data_dir (phenonaut.packaged_datasets.base.packageddataset property)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.raw_data_dir"]], "register_df_key() (phenonaut.packaged_datasets.base.packageddataset method)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.register_df_key"]], "register_ds_key() (phenonaut.packaged_datasets.base.packageddataset method)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.register_ds_key"]], "root (phenonaut.packaged_datasets.base.packageddataset property)": [[10, "phenonaut.packaged_datasets.base.PackagedDataset.root"]], "treatment_id (phenonaut.packaged_datasets.tcga.tcga.tcga_metadatatuple attribute)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.TCGA_MetadataTuple.treatment_id"]], "treatment_lambda (phenonaut.packaged_datasets.tcga.tcga.tcga_metadatatuple attribute)": [[10, "phenonaut.packaged_datasets.tcga.TCGA.TCGA_MetadataTuple.treatment_lambda"]], "hyperparametercategorical (class in phenonaut.predict.predictor_dataclasses)": [[11, "phenonaut.predict.predictor_dataclasses.HyperparameterCategorical"]], "hyperparameterfloat (class in phenonaut.predict.predictor_dataclasses)": [[11, "phenonaut.predict.predictor_dataclasses.HyperparameterFloat"]], "hyperparameterint (class in phenonaut.predict.predictor_dataclasses)": [[11, "phenonaut.predict.predictor_dataclasses.HyperparameterInt"]], "hyperparameterlog (class in phenonaut.predict.predictor_dataclasses)": [[11, "phenonaut.predict.predictor_dataclasses.HyperparameterLog"]], "optunahyperparameter (class in phenonaut.predict.predictor_dataclasses)": [[11, "phenonaut.predict.predictor_dataclasses.OptunaHyperparameter"]], "optunahyperparameternumber (class in phenonaut.predict.predictor_dataclasses)": [[11, "phenonaut.predict.predictor_dataclasses.OptunaHyperparameterNumber"]], "phenonautpredictionmetric (class in phenonaut.predict.predictor_dataclasses)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictionMetric"]], "phenonautpredictor (class in phenonaut.predict.predictor_dataclasses)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor"]], "predictiontype (class in phenonaut.predict.predict_utils)": [[11, "phenonaut.predict.predict_utils.PredictionType"]], "__call__() (phenonaut.predict.predictor_dataclasses.phenonautpredictionmetric method)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictionMetric.__call__"]], "choices (phenonaut.predict.predictor_dataclasses.hyperparametercategorical attribute)": [[11, "phenonaut.predict.predictor_dataclasses.HyperparameterCategorical.choices"]], "classification (phenonaut.predict.predict_utils.predictiontype attribute)": [[11, "phenonaut.predict.predict_utils.PredictionType.classification"]], "conditional_hyperparameter_generator (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.conditional_hyperparameter_generator"]], "conditional_hyperparameter_generator_constructor_keyword (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.conditional_hyperparameter_generator_constructor_keyword"]], "constructor_kwargs (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.constructor_kwargs"]], "dataset_size_cutoff (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.dataset_size_cutoff"]], "embed_in_results (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.embed_in_results"]], "func (phenonaut.predict.predictor_dataclasses.phenonautpredictionmetric attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictionMetric.func"]], "get_x_y() (in module phenonaut.predict.predict_utils)": [[11, "phenonaut.predict.predict_utils.get_X_y"]], "get_best_predictor_dataset_df() (in module phenonaut.predict.predict_utils)": [[11, "phenonaut.predict.predict_utils.get_best_predictor_dataset_df"]], "get_common_indexes() (in module phenonaut.predict.predict_utils)": [[11, "phenonaut.predict.predict_utils.get_common_indexes"]], "get_df_from_optuna_db() (in module phenonaut.predict.predict_utils)": [[11, "phenonaut.predict.predict_utils.get_df_from_optuna_db"]], "get_metric() (in module phenonaut.predict.predict_utils)": [[11, "phenonaut.predict.predict_utils.get_metric"]], "get_prediction_type_from_y() (in module phenonaut.predict.predict_utils)": [[11, "phenonaut.predict.predict_utils.get_prediction_type_from_y"]], "get_y_from_target() (in module phenonaut.predict.predict_utils)": [[11, "phenonaut.predict.predict_utils.get_y_from_target"]], "lower_bound (phenonaut.predict.predictor_dataclasses.optunahyperparameternumber attribute)": [[11, "phenonaut.predict.predictor_dataclasses.OptunaHyperparameterNumber.lower_bound"]], "lower_is_better (phenonaut.predict.predictor_dataclasses.phenonautpredictionmetric attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictionMetric.lower_is_better"]], "max_classes (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.max_classes"]], "max_optuna_trials (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.max_optuna_trials"]], "name (phenonaut.predict.predictor_dataclasses.optunahyperparameter attribute)": [[11, "phenonaut.predict.predictor_dataclasses.OptunaHyperparameter.name"]], "name (phenonaut.predict.predictor_dataclasses.phenonautpredictionmetric attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictionMetric.name"]], "name (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.name"]], "needed (phenonaut.predict.predictor_dataclasses.hyperparametercategorical attribute)": [[11, "phenonaut.predict.predictor_dataclasses.HyperparameterCategorical.needed"]], "needed (phenonaut.predict.predictor_dataclasses.optunahyperparameternumber attribute)": [[11, "phenonaut.predict.predictor_dataclasses.OptunaHyperparameterNumber.needed"]], "num_views (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.num_views"]], "optuna (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.optuna"]], "phenonaut.predict": [[11, "module-phenonaut.predict"]], "phenonaut.predict.optuna_functions": [[11, "module-phenonaut.predict.optuna_functions"]], "phenonaut.predict.predict_utils": [[11, "module-phenonaut.predict.predict_utils"]], "phenonaut.predict.predictor_dataclasses": [[11, "module-phenonaut.predict.predictor_dataclasses"]], "phenonaut.predict.profile": [[11, "module-phenonaut.predict.profile"]], "predictor (phenonaut.predict.predictor_dataclasses.phenonautpredictor attribute)": [[11, "phenonaut.predict.predictor_dataclasses.PhenonautPredictor.predictor"]], "predictor_from_str() (in module phenonaut.predict.optuna_functions)": [[11, "phenonaut.predict.optuna_functions.predictor_from_str"]], "predictor_to_str() (in module phenonaut.predict.optuna_functions)": [[11, "phenonaut.predict.optuna_functions.predictor_to_str"]], "profile() (in module phenonaut.predict.profile)": [[11, "phenonaut.predict.profile.profile"]], "regression (phenonaut.predict.predict_utils.predictiontype attribute)": [[11, "phenonaut.predict.predict_utils.PredictionType.regression"]], "run_optuna_opt() (in module phenonaut.predict.optuna_functions)": [[11, "phenonaut.predict.optuna_functions.run_optuna_opt"]], "run_optuna_opt_merge_folds() (in module phenonaut.predict.optuna_functions)": [[11, "phenonaut.predict.optuna_functions.run_optuna_opt_merge_folds"]], "upper_bound (phenonaut.predict.predictor_dataclasses.optunahyperparameternumber attribute)": [[11, "phenonaut.predict.predictor_dataclasses.OptunaHyperparameterNumber.upper_bound"]], "view (phenonaut.predict.predict_utils.predictiontype attribute)": [[11, "phenonaut.predict.predict_utils.PredictionType.view"]], "phenonaut.predict.default_predictors": [[12, "module-phenonaut.predict.default_predictors"]], "phenonaut.predict.default_predictors.classifiers": [[12, "module-phenonaut.predict.default_predictors.classifiers"]], "phenonaut.predict.default_predictors.multiregressors": [[12, "module-phenonaut.predict.default_predictors.multiregressors"]], "phenonaut.predict.default_predictors.regressors": [[12, "module-phenonaut.predict.default_predictors.regressors"]], "dave (class in phenonaut.predict.default_predictors.pytorch_models.dave)": [[13, "phenonaut.predict.default_predictors.pytorch_models.dave.DAVE"]], "multiregressornn (class in phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn)": [[13, "phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn.MultiRegressorNN"]], "fit() (phenonaut.predict.default_predictors.pytorch_models.dave.dave method)": [[13, "phenonaut.predict.default_predictors.pytorch_models.dave.DAVE.fit"]], "fit() (phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn.multiregressornn method)": [[13, "phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn.MultiRegressorNN.fit"]], "loss_function() (phenonaut.predict.default_predictors.pytorch_models.dave.dave method)": [[13, "phenonaut.predict.default_predictors.pytorch_models.dave.DAVE.loss_function"]], "phenonaut.predict.default_predictors.pytorch_models": [[13, "module-phenonaut.predict.default_predictors.pytorch_models"]], "phenonaut.predict.default_predictors.pytorch_models.dave": [[13, "module-phenonaut.predict.default_predictors.pytorch_models.dave"]], "phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn": [[13, "module-phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn"]], "predict() (phenonaut.predict.default_predictors.pytorch_models.dave.dave method)": [[13, "phenonaut.predict.default_predictors.pytorch_models.dave.DAVE.predict"]], "predict() (phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn.multiregressornn method)": [[13, "phenonaut.predict.default_predictors.pytorch_models.multiregressor_nn.MultiRegressorNN.predict"]], "knnimputer (class in phenonaut.transforms.imputers)": [[14, "phenonaut.transforms.imputers.KNNImputer"]], "lda (class in phenonaut.transforms.dimensionality_reduction)": [[14, "phenonaut.transforms.dimensionality_reduction.LDA"]], "log2 (class in phenonaut.transforms.generic_transformations)": [[14, "phenonaut.transforms.generic_transformations.Log2"]], "pca (class in phenonaut.transforms.dimensionality_reduction)": [[14, "phenonaut.transforms.dimensionality_reduction.PCA"]], "phetransformerfitquerymatchednorows": [[14, "phenonaut.transforms.transformer.PheTransformerFitQueryMatchedNoRows"]], "rfimputer (class in phenonaut.transforms.imputers)": [[14, "phenonaut.transforms.imputers.RFImputer"]], "removehighestcorrelatedthenvif (class in phenonaut.transforms.preparative)": [[14, "phenonaut.transforms.preparative.RemoveHighestCorrelatedThenVIF"]], "removehighlycorrelated (class in phenonaut.transforms.preparative)": [[14, "phenonaut.transforms.preparative.RemoveHighlyCorrelated"]], "robustmad (class in phenonaut.transforms.preparative)": [[14, "phenonaut.transforms.preparative.RobustMAD"]], "simpleimputer (class in phenonaut.transforms.imputers)": [[14, "phenonaut.transforms.imputers.SimpleImputer"]], "standardscaler (class in phenonaut.transforms.preparative)": [[14, "phenonaut.transforms.preparative.StandardScaler"]], "supervisedtransformer (class in phenonaut.transforms.supervised_transformer)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer"]], "tsne (class in phenonaut.transforms.dimensionality_reduction)": [[14, "phenonaut.transforms.dimensionality_reduction.TSNE"]], "transformer (class in phenonaut.transforms.transformer)": [[14, "phenonaut.transforms.transformer.Transformer"]], "umap (class in phenonaut.transforms.dimensionality_reduction)": [[14, "phenonaut.transforms.dimensionality_reduction.UMAP"]], "vif (class in phenonaut.transforms.preparative)": [[14, "phenonaut.transforms.preparative.VIF"]], "zca (class in phenonaut.transforms.preparative)": [[14, "phenonaut.transforms.preparative.ZCA"]], "__call__() (phenonaut.transforms.dimensionality_reduction.lda method)": [[14, "phenonaut.transforms.dimensionality_reduction.LDA.__call__"]], "__call__() (phenonaut.transforms.dimensionality_reduction.pca method)": [[14, "phenonaut.transforms.dimensionality_reduction.PCA.__call__"]], "__call__() (phenonaut.transforms.dimensionality_reduction.tsne method)": [[14, "phenonaut.transforms.dimensionality_reduction.TSNE.__call__"]], "__call__() (phenonaut.transforms.dimensionality_reduction.umap method)": [[14, "phenonaut.transforms.dimensionality_reduction.UMAP.__call__"]], "__call__() (phenonaut.transforms.preparative.removehighestcorrelatedthenvif method)": [[14, "phenonaut.transforms.preparative.RemoveHighestCorrelatedThenVIF.__call__"]], "__call__() (phenonaut.transforms.preparative.removehighlycorrelated method)": [[14, "phenonaut.transforms.preparative.RemoveHighlyCorrelated.__call__"]], "__call__() (phenonaut.transforms.preparative.vif method)": [[14, "phenonaut.transforms.preparative.VIF.__call__"]], "__call__() (phenonaut.transforms.transformer.transformer method)": [[14, "phenonaut.transforms.transformer.Transformer.__call__"]], "callable_args (phenonaut.transforms.supervised_transformer.supervisedtransformer attribute)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.callable_args"]], "filter() (phenonaut.transforms.preparative.removehighestcorrelatedthenvif method)": [[14, "phenonaut.transforms.preparative.RemoveHighestCorrelatedThenVIF.filter"]], "filter() (phenonaut.transforms.preparative.removehighlycorrelated method)": [[14, "phenonaut.transforms.preparative.RemoveHighlyCorrelated.filter"]], "filter() (phenonaut.transforms.preparative.vif method)": [[14, "phenonaut.transforms.preparative.VIF.filter"]], "fit() (phenonaut.transforms.supervised_transformer.supervisedtransformer method)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.fit"]], "fit() (phenonaut.transforms.transformer.transformer method)": [[14, "phenonaut.transforms.transformer.Transformer.fit"]], "fit_transform() (phenonaut.transforms.supervised_transformer.supervisedtransformer method)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.fit_transform"]], "fit_transform() (phenonaut.transforms.transformer.transformer method)": [[14, "phenonaut.transforms.transformer.Transformer.fit_transform"]], "get_vif_scores() (phenonaut.transforms.preparative.vif method)": [[14, "phenonaut.transforms.preparative.VIF.get_vif_scores"]], "has_fit (phenonaut.transforms.supervised_transformer.supervisedtransformer attribute)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.has_fit"]], "has_fit_transform (phenonaut.transforms.supervised_transformer.supervisedtransformer attribute)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.has_fit_transform"]], "has_transform (phenonaut.transforms.supervised_transformer.supervisedtransformer attribute)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.has_transform"]], "is_callable (phenonaut.transforms.supervised_transformer.supervisedtransformer attribute)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.is_callable"]], "make_scree_plot() (phenonaut.transforms.dimensionality_reduction.lda method)": [[14, "phenonaut.transforms.dimensionality_reduction.LDA.make_scree_plot"]], "method (phenonaut.transforms.supervised_transformer.supervisedtransformer attribute)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.method"]], "method_kwargs (phenonaut.transforms.supervised_transformer.supervisedtransformer attribute)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.method_kwargs"]], "new_feature_names (phenonaut.transforms.supervised_transformer.supervisedtransformer attribute)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.new_feature_names"]], "phenonaut.transforms": [[14, "module-phenonaut.transforms"]], "phenonaut.transforms.dimensionality_reduction": [[14, "module-phenonaut.transforms.dimensionality_reduction"]], "phenonaut.transforms.generic_transformations": [[14, "module-phenonaut.transforms.generic_transformations"]], "phenonaut.transforms.imputers": [[14, "module-phenonaut.transforms.imputers"]], "phenonaut.transforms.preparative": [[14, "module-phenonaut.transforms.preparative"]], "phenonaut.transforms.supervised_transformer": [[14, "module-phenonaut.transforms.supervised_transformer"]], "phenonaut.transforms.transformer": [[14, "module-phenonaut.transforms.transformer"]], "save_scree_plot() (phenonaut.transforms.dimensionality_reduction.pca method)": [[14, "phenonaut.transforms.dimensionality_reduction.PCA.save_scree_plot"]], "transform() (phenonaut.transforms.supervised_transformer.supervisedtransformer method)": [[14, "phenonaut.transforms.supervised_transformer.SupervisedTransformer.transform"]], "transform() (phenonaut.transforms.transformer.transformer method)": [[14, "phenonaut.transforms.transformer.Transformer.transform"]]}})